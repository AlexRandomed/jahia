<content-definitions>

	<!-- Globals definition -->
	<!-- Available to all system -->
	<repository name="global" isGlobal="true">

		<!-- Core structural relationship -->
		<structural-relationships>
			<link>
				<name>parentchild-link</name>	
			</link>
			<link>
				<name>property-link</name>	
			</link>
		</structural-relationships>
			
		<!-- Value types -->
		<value-types>
			<value-type>
				<name>Application</name>
				<class>org.jahia.content.Application</class>
			</value-type>
			<value-type>
				<name>BigText</name>
				<class>java.lang.String</class>
			</value-type>
			<value-type>
				<name>Boolean</name>
				<class>java.lang.Boolean</class>
			</value-type>
			<value-type>
				<name>Date</name>
				<title>Date Type</title>
				<class>java.lang.Date</class>
			</value-type>
			<value-type>
				<name>File</name>
				<title>File type</title>
				<class>org.jahia.content.File</class>
			</value-type>
			<value-type>
				<name>Integer</name>
				<title>Integer Type</title>
				<class>java.lang.Integer</class>
			</value-type>
			<value-type>
				<name>String</name>
				<title>String Type</title>
				<class>java.lang.String</class>
			</value-type>
			<value-type>
				<name>Link</name>
				<title>Link Type</title>
				<class>org.jahia.content.Link</class>
			</value-type>
		</value-types>

		<content-def-list>
			<!-- Core Content types -->

			<!-- Core Content type model-->
			<!-- Default content type with some properties -->
			<content-def>
				<name>CoreContentTypeModel</name>
				<title>Core Content type model</title>
				<!-- Content type declared as properties have a property-link 
					 with their parent -->
				<property-def-list>
					<!-- Metadata content type -->
					<property-def>
						<name>Author</name>
						<title>Author</title>
						<value-type>String</value-type>
					</property-def>
					<property-def>
						<name>CreationDate</name>
						<title>Creation Date</title>
						<value-type>Date</value-type>
					</property-def>
					<property-def>
						<name>ExpirationDate</name>
						<title>Expiration Date</title>
						<value-type>Date</value-type>
					</property-def>
				</property-def-list>
			</content-def>
	
			<!-- Sample Content types -->
			<!-- Simple News definition -->
			<content-def>
				<name>NewsContent</name>
				<title>Main Content</title>
				<extend importFromParent="all">CoreContentTypeModel</extend>
				<value-type>BigText</value-type>
			</content-def>
			<content-def>
				<name>NewsTitle</name>
				<title>Title</title>
				<extend importFromParent="all">CoreContentTypeModel</extend>
				<value-type>String</value-type>
			</content-def>
			
			<!-- Sample News container definition -->
			<content-def>
				<name>NewsContainer</name>
				<title>News Container</title>
				<extend importFromParent="all">CoreContentTypeModel</extend>
				<content-def-list>
					<!-- use the content type named NewsContent -->
					<content-def>
						<ref>NewsContent</ref>
					</content-def>
					<content-def>
						<name>NewsTitle2</name>
						<title>Title2</title>
						<value-type>String</value-type>
					</content-def>
				</content-def-list>
			</content-def>
		</content-def-list>
		
	</repository>

	<!-- Definition Repository for the virtual site myjahiasite -->
	<repository name="myjahiasite">

		<content-def-list>	
			<!-- Sample News container definition -->
			<content-def>
				<name>NewsContainer</name>
				<title>News Container</title>
				<extend importFromParent="all">CoreContentTypeModel</extend>
				<content-def-list>
					<!-- use the content type named NewsContent in the global repository -->
					<content-def>
						<ref>NewsContent</ref>
					</content-def>
	
					<!-- local content type definition -->
					<!-- Override the global definition -->
					<!-- Should we force content type name to be unique to be compliant with jsr 170 ??? -->
					<content-def>
						<name>NewsTitle</name>
						<title>Title</title>
						<value-type>String</value-type>
					</content-def>
				</content-def-list>
			</content-def>
	
			<!-- Sample Files container with Resources sub-containers definition -->
			<content-def>
				<name>FileContainer</name>
				<title>File Container</title>
				<extend importFromParent="all">CoreContentTypeModel</extend>
				<!-- import all content from extended parent content-def -->
				<content-def-list>
					<content-def>
						<name>File</name>
						<title>File title</title>
						<value-type>File</value-type>
					</content-def>
				</content-def-list>
			</content-def>
	
			<!-- Sample News container with Resources sub-containers definition -->
			<content-def>
				<name>NewsWithResources</name>
				<title>News with resources Container</title>
				<extend importFromParent="all">NewsContainer</extend>
				<!-- import all content from extended parent content-def -->
				<content-def-list>
					<content-def>
						<!-- sub container definition -->
						<ref>FileContainer</ref>
					</content-def>
				</content-def-list>
			</content-def>

		</content-def-list>	

	</repository>
	
</content-definitions>