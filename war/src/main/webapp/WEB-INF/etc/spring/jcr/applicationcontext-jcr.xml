<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="AbstractJCRStoreProvider" class="org.jahia.services.content.JCRStoreProvider" abstract="true"
          init-method="start" destroy-method="stop">
        <property name="userManagerService" ref="JahiaUserManagerService"/>
        <property name="groupManagerService" ref="JahiaGroupManagerService"/>
        <property name="sitesService" ref="JahiaSitesService"/>
        <property name="service" ref="JCRStoreService"/>
        <property name="sessionFactory" ref="jcrSessionFactory"/>
        <property name="publicationService" ref="jcrPublicationService"/>
    </bean>

    <bean id="DefaulJCRStoreProvider" class="org.jahia.services.content.impl.jackrabbit.JackrabbitStoreProvider"
          parent="AbstractJCRStoreProvider">
        <property name="key" value="default"/>
        <property name="repository" ref="jackrabbit"/>
        <property name="mountPoint" value="/"/>
        <property name="webdavPath" value="${jahia.contextPath}/repository/default"/>
        <property name="rmibind" value="jackrabbit"/>
        <property name="providesDynamicMountPoints" value="true"/>
    </bean>

    <bean id="jcrSessionFactory" class="org.jahia.services.content.JCRSessionFactory" factory-method="getInstance"
          lazy-init="true" init-method="start">
        <property name="userService" ref="JahiaUserManagerService"/>
        <property name="descriptors">
            <map>
                <entry key="jcr.specification.version" value="1.0"/>
                <entry key="jcr.specification.name"
                       value="Content Repository API for Java(TM) Technology Specification"/>
                <entry key="jcr.repository.vendor" value="Jahia"/>
                <entry key="jcr.repository.vendor.url" value="http://www.jahia.org/"/>
                <entry key="jcr.repository.name" value="Jahia"/>
                <entry key="jcr.repository.version" value="6.5"/>
                <entry key="level.1.supported" value="true"/>
                <entry key="level.2.supported" value="true"/>
                <entry key="option.transactions.supported" value="true"/>
                <entry key="option.versioning.supported" value="true"/>
                <entry key="option.observation.supported" value="false"/>
                <entry key="option.locking.supported" value="true"/>
                <entry key="option.query.sql.supported" value="true"/>
                <entry key="query.xpath.pos.index" value="true"/>
                <entry key="query.xpath.doc.order" value="false"/>
            </map>
        </property>
        <property name="servletContextAttributeName" value="uch"/>
    </bean>

    <bean id="jcrTemplate" class="org.jahia.services.content.JCRTemplate" factory-method="getInstance">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
    </bean>

    <bean id="JCRStoreService" class="org.jahia.services.content.JCRStoreService" parent="jahiaServiceTemplate"
          factory-method="getInstance" lazy-init="true">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
        <property name="decorators">
            <map>
                <entry key="jnt:virtualsite" value="org.jahia.services.content.decorator.JCRSiteNode"/>
                <entry key="nt:file" value="org.jahia.services.content.decorator.JCRFileNode"/>
                <entry key="nt:folder" value="org.jahia.services.content.decorator.JCRFileNode"/>
                <entry key="jnt:portlet" value="org.jahia.services.content.decorator.JCRPortletNode"/>
                <entry key="nt:query" value="org.jahia.services.content.decorator.JCRQueryNode"/>
                <entry key="jnt:mountPoint" value="org.jahia.services.content.decorator.JCRMountPointNode"/>
                <entry key="jnt:layout" value="org.jahia.services.content.decorator.JCRLayoutNode"/>
                <entry key="nt:version" value="org.jahia.services.content.decorator.JCRVersion"/>
                <entry key="nt:versionHistory" value="org.jahia.services.content.decorator.JCRVersionHistory"/>
                <entry key="nt:frozenNode" value="org.jahia.services.content.decorator.JCRFrozenNode"/>
                <entry key="jmix:nodeReference" value="org.jahia.services.content.decorator.JCRReferenceNode"/>
                <entry key="jnt:simplePreference"
                       value="org.jahia.services.preferences.generic.GenericJahiaPreference"/>
                <entry key="jnt:pagePreference" value="org.jahia.services.preferences.page.PageJahiaPreference"/>
                <entry key="jnt:bookmarkPreference"
                       value="org.jahia.services.preferences.bookmarks.BookmarksJahiaPreference"/>
                <entry key="jnt:portletPreference"
                       value="org.jahia.services.applications.pluto.JahiaPortletPreference"/>
                <entry key="jnt:user" value="org.jahia.services.content.decorator.JCRUserNode"/>
            </map>
        </property>
        <property name="listeners">
            <map>
                <entry key="default">
                    <list>
                        <bean class="org.jahia.services.content.FullpathListener"/>
                        <bean class="org.jahia.services.content.LastModifiedListener"/>
                        <bean class="org.jahia.services.content.DefaultValueListener"/>
                        <bean class="org.jahia.services.content.rules.RulesListener" init-method="start">
                            <property name="ruleFiles">
                                <set>
                                    <value>/repository/rules/repository-rules.drl</value>
                                    <value>/repository/rules/text-extraction-rules.drl</value>
                                </set>
                            </property>

                            <property name="serverId" value="${cluster.node.serverId}"/>
                            <property name="globalObjects">
                                <map>
                                    <entry key="service" value-ref="org.jahia.services.content.rules.Service"/>
                                    <entry key="imageService"
                                           value-ref="org.jahia.services.content.rules.ImageService"/>
                                    <entry key="extractionService"
                                           value-ref="org.jahia.services.content.rules.ExtractionService"/>
                                    <entry key="notificationService"
                                           value-ref="org.jahia.services.content.rules.RulesNotificationService"/>
                                </map>
                            </property>
                        </bean>
                        <bean class="org.jahia.services.content.textextraction.TextExtractionListener">
                            <property name="settingsBean" ref="settingsBean"/>
                            <property name="extractionService"
                                      ref="org.jahia.services.content.rules.ExtractionService"/>
                            <property name="schedulerService" ref="SchedulerService"/>
                            <property name="userManagerService" ref="JahiaUserManagerService"/>
                        </bean>
                        <bean class="org.jahia.services.content.FilesCacheListener"/>
                        <bean class="org.jahia.services.logging.MetricsLoggingJCReventListener">
                            <property name="loggingService" ref="loggingService"/>
                            <property name="nodeTypesList">
                                <list/>
                            </property>
                        </bean>
                        <bean class="org.jahia.services.content.JCRUserPropertyModificationListener"/>
                    </list>
                </entry>
                <entry key="live">
                    <list>
                        <bean class="org.jahia.services.content.FullpathListener"/>
                        <bean class="org.jahia.services.content.LastModifiedListener"/>
                        <bean class="org.jahia.services.content.DefaultValueListener"/>
                        <bean class="org.jahia.services.content.rules.RulesListener" init-method="start">
                            <property name="ruleFiles" value="/repository/rules/repository-live-rules.drl"/>
                            <property name="serverId" value="${cluster.node.serverId}"/>
                            <property name="globalObjects">
                                <map>
                                    <entry key="service" value-ref="org.jahia.services.content.rules.Service"/>
                                    <entry key="imageService"
                                           value-ref="org.jahia.services.content.rules.ImageService"/>
                                    <entry key="extractionService"
                                           value-ref="org.jahia.services.content.rules.ExtractionService"/>
                                </map>
                            </property>
                        </bean>
                        <bean class="org.jahia.services.content.FilesCacheListener">
                            <property name="availableDuringPublish" value="true"/>
                        </bean>
                        <bean class="org.jahia.services.render.filter.cache.HtmlCacheEventListener">
                            <property name="cacheProvider" ref="ModuleCacheProvider"/>
                            <property name="jcrTemplate" ref="jcrTemplate"/>
                            <property name="availableDuringPublish" value="true"/>
                        </bean>
                        <bean class="org.jahia.services.content.JCRUserPropertyModificationListener"/>
                    </list>
                </entry>
            </map>
        </property>
        <property name="interceptors">
            <list>
                <bean class="org.jahia.services.content.interceptor.LastModifiedInterceptor"/>
                <bean class="org.jahia.services.content.interceptor.HtmlFilteringInterceptor">
                    <constructor-arg value="${filteredHtmlTags}"/>
                </bean>
                <bean class="org.jahia.services.content.interceptor.URLInterceptor">
                    <constructor-arg ref="org.jahia.services.render.filter.URLTraverser"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="jcrVersionService" class="org.jahia.services.content.JCRVersionService" factory-method="getInstance">
    </bean>

    <bean id="jcrPublicationService" class="org.jahia.services.content.JCRPublicationService"
          factory-method="getInstance">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
        <property name="jcrVersionService" ref="jcrVersionService"/>
        <property name="loggingService" ref="loggingService"/>
    </bean>


    <bean id="jackrabbit" class="org.jahia.services.content.impl.jackrabbit.SpringJackrabbitRepository"
          init-method="start" destroy-method="stop" depends-on="JahiaTemplateManagerService,DefaulJCRStoreProvider">
        <property name="configFile" value="WEB-INF/etc/repository/jackrabbit/repository.xml"/>
        <property name="homeDir" value="WEB-INF/var/repository"/>
        <property name="servletContextAttributeName"
                  value="org.jahia.services.content.impl.jackrabbit.SpringJackrabbitRepository"/>
    </bean>

    <bean id="rbInitializer"
          class="org.jahia.services.content.nodetypes.initializers.ResourceBundleChoiceListInitializerImpl"/>
    <bean id="countryInitializerRenderer"
          class="org.jahia.services.content.nodetypes.initializers.CountryChoiceListInitializerAndRendererImpl"/>
    <bean id="countryFlagInitializer"
          class="org.jahia.services.content.nodetypes.initializers.CountryFlagChoiceListInitializerAndRendererImpl"/>
    <bean id="imageInitializer"
          class="org.jahia.services.content.nodetypes.initializers.ImageChoiceListInitializerImpl"/>
    <bean id="templatesInitializer"
          class="org.jahia.services.content.nodetypes.initializers.TemplatesChoiceListInitializerImpl"/>
    <bean id="templatesNodeInitializer"
          class="org.jahia.services.content.nodetypes.initializers.TemplatesNodeChoiceListInitializer"/>
    <bean id="usersInitializer"
          class="org.jahia.services.content.nodetypes.initializers.UsersChoiceListInitializerImpl"/>
    <bean id="moduleImageInitializer"
          class="org.jahia.services.content.nodetypes.initializers.ModuleImageChoiceListInitializerImpl"/>
    <bean id="nodetypesInitializer"
          class="org.jahia.services.content.nodetypes.initializers.NodeTypesChoiceListInitializerImpl"/>
    <bean id="subNodetypesInitializer"
          class="org.jahia.services.content.nodetypes.initializers.SubNodeTypesChoiceListInitializerImpl"/>
    <bean id="nodesInitializer"
          class="org.jahia.services.content.nodetypes.initializers.NodesChoiceListInitializerImpl">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
    </bean>
    <bean id="menuInitializer"
          class="org.jahia.services.content.nodetypes.initializers.MenusChoiceListInitializerImpl">
    </bean>
    <bean id="scriptInitializer"
          class="org.jahia.services.content.nodetypes.initializers.ScriptChoiceListInitializerImpl"/>
    <bean id="sortableFieldnamesInitializer"
          class="org.jahia.services.content.nodetypes.initializers.SortableFieldnamesChoiceListInitializerImpl">
        <property name="excludedNodeTypes">
            <set>
                <value type="java.lang.String">jmix:nodenameInfo</value>
                <value type="java.lang.String">mix:referenceable</value>
                <value type="java.lang.String">mix:simpleVersionable</value>
                <value type="java.lang.String">mix:versionable</value>
                <value type="java.lang.String">nt:base</value>
            </set>
        </property>
        <property name="showHidden" value="false"/>
        <property name="showProtected" value="true"/>
    </bean>
    <bean id="commponentLinkerInitializer"
          class="org.jahia.services.content.nodetypes.initializers.ComponentLinkerChoiceListInitializer">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
    </bean>
    <bean id="workflowInitializer"
          class="org.jahia.services.content.nodetypes.initializers.WorkflowChoiceListInitializer">
        <property name="workflowService" ref="workflowService"/>
    </bean>
    <bean id="nodeReferenceRenderer"
          class="org.jahia.services.content.nodetypes.renderer.NodeReferenceChoiceListRenderer"/>

    <bean id="choiceListInitializers"
          class="org.jahia.services.content.nodetypes.initializers.ChoiceListInitializerService"
          factory-method="getInstance">
        <property name="initializers">
            <map>
                <entry key="resourceBundle" value-ref="rbInitializer"/>
                <entry key="country" value-ref="countryInitializerRenderer"/>
                <entry key="image" value-ref="imageInitializer"/>
                <entry key="templates" value-ref="templatesInitializer"/>
                <entry key="templatesNode" value-ref="templatesNodeInitializer"/>

                <entry key="users" value-ref="usersInitializer"/>
                <entry key="nodetypes" value-ref="nodetypesInitializer"/>
                <entry key="subnodetypes" value-ref="subNodetypesInitializer"/>
                <entry key="nodes" value-ref="nodesInitializer"/>
                <entry key="menus" value-ref="menuInitializer"/>
                <entry key="script" value-ref="scriptInitializer"/>
                <entry key="flag" value-ref="countryFlagInitializer"/>
                <entry key="sortableFieldnames" value-ref="sortableFieldnamesInitializer"/>
                <entry key="moduleImage" value-ref="moduleImageInitializer"/>
                <entry key="linkerProps" value-ref="commponentLinkerInitializer"/>
                <entry key="workflow" value-ref="workflowInitializer"/>
            </map>
        </property>
    </bean>
    <bean id="choiceListRenderers" class="org.jahia.services.content.nodetypes.renderer.ChoiceListRendererService"
          factory-method="getInstance">
        <property name="renderers">
            <map>
                <entry key="country" value-ref="countryInitializerRenderer"/>
                <entry key="flagcountry" value-ref="countryFlagInitializer"/>
                <entry key="resourceBundle" value-ref="rbInitializer"/>
                <entry key="nodeReference" value-ref="nodeReferenceRenderer"/>
            </map>
        </property>
    </bean>

    <bean id="org.jahia.services.content.rules.ImageService" class="org.jahia.services.content.rules.ImageService" factory-method="getInstance"/>

    <bean id="org.jahia.services.content.rules.Service" class="org.jahia.services.content.rules.Service" factory-method="getInstance">
			<property name="taggingService" ref="org.jahia.services.tags.TaggingService" />
			<property name="cacheService" ref="JahiaCacheService" />
			<property name="schedulerService" ref="SchedulerService" />
			<property name="sitesService" ref="JahiaSitesService" />
			<property name="userManagerService" ref="JahiaUserManagerService" />
			<property name="passwordPolicyService" ref="JahiaPasswordPolicyService" />
    </bean>

    <bean id="JcrSessionFilter" class="org.jahia.bin.filters.jcr.JcrSessionFilter">
    	<property name="authPipeline" ref="authPipeline"/>
    	<property name="sessionFactory" ref="jcrSessionFactory"/>
    	<property name="userManagerService" ref="JahiaUserManagerService"/>
    </bean>

</beans>