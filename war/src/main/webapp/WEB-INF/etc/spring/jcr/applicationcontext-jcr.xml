<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="AbstractJCRStoreProvider" class="org.jahia.services.content.JCRStoreProvider" abstract="true" init-method="start" destroy-method="stop" >
        <property name="userManagerService" ref="JahiaUserManagerService"/>
        <property name="groupManagerService" ref="JahiaGroupManagerService"/>
        <property name="sitesService" ref="JahiaSitesService"/>
        <property name="service" ref="JCRStoreService"/>
        <property name="sessionFactory" ref="jcrSessionFactory"/>
        <property name="publicationService" ref="jcrPublicationService"/>
    </bean>

    <bean id="DefaulJCRStoreProvider" class="org.jahia.services.content.impl.jackrabbit.JackrabbitStoreProvider" parent="AbstractJCRStoreProvider">
        <property name="key" value="default"/>
        <property name="repository" ref="jackrabbit"/>
        <property name="mountPoint" value="/"/>
        <property name="webdavPath" value="${jahia.deploy.war.contextPath}/repository/default"/>
        <property name="rmibind" value="jackrabbit"/>
        <property name="providesDynamicMountPoints" value="true"/>
    </bean>

    <bean id="jcrSessionFactory" class="org.jahia.services.content.JCRSessionFactory" factory-method="getInstance" lazy-init="true" init-method="start">
        <property name="userService" ref="JahiaUserManagerService"/>
        <property name="descriptors">
            <map>
                <entry key="jcr.specification.version" value="1.0"/>
                <entry key="jcr.specification.name"
                       value="Content Repository API for Java(TM) Technology Specification"/>
                <entry key="jcr.repository.vendor" value="Jahia"/>
                <entry key="jcr.repository.vendor.url" value="http://www.jahia.org/"/>
                <entry key="jcr.repository.name" value="Crazy Jane"/>
                <entry key="jcr.repository.version" value="6.5"/>
                <entry key="level.1.supported" value="true"/>
                <entry key="level.2.supported" value="true"/>
                <entry key="option.transactions.supported" value="true"/>
                <entry key="option.versioning.supported" value="true"/>
                <entry key="option.observation.supported" value="false"/>
                <entry key="option.locking.supported" value="true"/>
                <entry key="option.query.sql.supported" value="true"/>
                <entry key="query.xpath.pos.index" value="true"/>
                <entry key="query.xpath.doc.order" value="false"/>
            </map>
        </property>
        <property name="servletContextAttributeName" value="uch"/>
    </bean>

    <bean id="jcrTemplate" class="org.jahia.services.content.JCRTemplate" factory-method="getInstance">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
    </bean>

    <bean id="JCRStoreService" class="org.jahia.services.content.JCRStoreService" parent="jahiaServiceTemplate"
          factory-method="getInstance" lazy-init="true">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
        <property name="decorators">
            <map>
                <entry key="jnt:virtualsite" value="org.jahia.services.content.decorator.JCRSiteNode"/>
                <entry key="nt:file" value="org.jahia.services.content.decorator.JCRFileNode"/>
                <entry key="nt:folder" value="org.jahia.services.content.decorator.JCRFileNode"/>
                <entry key="jnt:portlet" value="org.jahia.services.content.decorator.JCRPortletNode"/>
                <entry key="nt:query" value="org.jahia.services.content.decorator.JCRQueryNode"/>
                <entry key="jnt:mountPoint" value="org.jahia.services.content.decorator.JCRMountPointNode"/>
                <entry key="jnt:layout" value="org.jahia.services.content.decorator.JCRLayoutNode"/>
                <entry key="nt:version" value="org.jahia.services.content.decorator.JCRVersion"/>
                <entry key="nt:versionHistory" value="org.jahia.services.content.decorator.JCRVersionHistory"/>
                <entry key="nt:frozenNode" value="org.jahia.services.content.decorator.JCRFrozenNode"/>
                <entry key="jmix:nodeReference" value="org.jahia.services.content.decorator.JCRReferenceNode"/>
                <entry key="jnt:simplePreference"
                       value="org.jahia.services.preferences.generic.GenericJahiaPreference"/>
                <entry key="jnt:pagePreference" value="org.jahia.services.preferences.page.PageJahiaPreference"/>
                <entry key="jnt:bookmarkPreference"
                       value="org.jahia.services.preferences.bookmarks.BookmarksJahiaPreference"/>
                <entry key="jnt:portletPreference"
                       value="org.jahia.services.applications.pluto.JahiaPortletPreference"/>
            </map>
        </property>
        <property name="listeners">
            <map>
                <entry key="default">
                    <list>
                        <bean class="org.jahia.services.content.FullpathListener"/>
                        <bean class="org.jahia.services.content.LastModifiedListener"/>
                        <bean class="org.jahia.services.content.rules.RulesListener" init-method="start">
                            <property name="ruleFiles" value="/repository/rules/repository-rules.drl" />
                            <property name="serverId" value="${cluster.node.serverId}"/>
                            <property name="globalObjects">
                                <map>
                                    <entry key="service" value-ref="org.jahia.services.content.rules.Service"/>
                                    <entry key="imageService" value-ref="org.jahia.services.content.rules.ImageService"/>
                                    <entry key="extractionService" value-ref="org.jahia.services.content.rules.ExtractionService"/>
                                </map>
                            </property>
                        </bean>
                        <bean class="org.jahia.services.content.textextraction.TextExtractionListener"/>
                        <bean class="org.jahia.services.content.DefaultValueListener"/>
                        <bean class="org.jahia.services.content.FilesCacheListener"/>
                        <bean class="org.jahia.services.logging.MetricsLoggingJCReventListener">
                            <property name="loggingService" ref="loggingService"/>
                            <property name="nodeTypesList">
                                <list/>
                            </property>
                        </bean>
                    </list>
                </entry>
                <entry key="live">
                    <list>
                        <bean class="org.jahia.services.content.LastModifiedListener"/>
                        <bean class="org.jahia.services.content.rules.RulesListener" init-method="start">
                            <property name="ruleFiles" value="/repository/rules/repository-live-rules.drl" />
                            <property name="serverId" value="${cluster.node.serverId}" />
                            <property name="globalObjects">
                                <map>
                                    <entry key="service" value-ref="org.jahia.services.content.rules.Service"/>
                                    <entry key="imageService" value-ref="org.jahia.services.content.rules.ImageService"/>
                                    <entry key="extractionService" value-ref="org.jahia.services.content.rules.ExtractionService"/>
                                </map>
                            </property>
                        </bean>
                        <bean class="org.jahia.services.content.FilesCacheListener"/>
                        <bean class="org.jahia.services.render.filter.cache.HtmlCacheEventListener">
                            <property name="cacheProvider" ref="ModuleCacheProvider"/>
                            <property name="jcrTemplate" ref="jcrTemplate"/>
                        </bean>
                    </list>
                </entry>
            </map>
        </property>
        <property name="interceptors">
            <list>
                <bean class="org.jahia.services.content.interceptor.URLInterceptor">
					<constructor-arg ref="org.jahia.services.render.filter.URLTraverser"/>
                </bean>
                <bean class="org.jahia.services.content.interceptor.I18NInterceptor">
                	<property name="skippedProperties">
                		<set>
                			<value>jcr:language</value>
                            <value>jcr:lastModified</value>
                            <value>jcr:lastModifiedBy</value>
                            <value>j:lastPublished</value>
                            <value>j:lastPublishedBy</value>
                            <value>j:templateLocked</value>
                            <value>j:templateShared</value>
                			<value>j:published</value>
                			<value>j:tags</value>
                		</set>
                	</property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="jcrVersionService" class="org.jahia.services.content.JCRVersionService" factory-method="getInstance">
    </bean>

    <bean id="jcrPublicationService" class="org.jahia.services.content.JCRPublicationService" factory-method="getInstance">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
        <property name="jcrVersionService" ref="jcrVersionService" />
    </bean>


    <bean id="jackrabbit" class="org.jahia.services.content.impl.jackrabbit.SpringJackrabbitRepository" init-method="start" destroy-method="stop" depends-on="DefaulJCRStoreProvider">
        <property name="configFile" value="WEB-INF/etc/repository/jackrabbit/repository.xml"/>
        <property name="homeDir" value="WEB-INF/var/repository"/>
        <property name="userService" ref="JahiaUserManagerService"/>
        <property name="groupService" ref="JahiaGroupManagerService"/>
        <property name="sitesService" ref="JahiaSitesService"/>
        <property name="servletContextAttributeName" value="org.jahia.services.content.impl.jackrabbit.SpringJackrabbitRepository" />
    </bean>

    <bean id="rbInitializer" class="org.jahia.services.content.nodetypes.initializers.ResourceBundleChoiceListInitializerImpl"/>
    <bean id="countryInitializerRenderer" class="org.jahia.services.content.nodetypes.initializers.CountryChoiceListInitializerAndRendererImpl"/>
    <bean id="countryFlagInitializer" class="org.jahia.services.content.nodetypes.initializers.CountryFlagChoiceListInitializerAndRendererImpl"/>
    <bean id="imageInitializer" class="org.jahia.services.content.nodetypes.initializers.ImageChoiceListInitializerImpl"/>
    <bean id="templatesInitializer" class="org.jahia.services.content.nodetypes.initializers.TemplatesChoiceListInitializerImpl"/>
    <bean id="usersInitializer" class="org.jahia.services.content.nodetypes.initializers.UsersChoiceListInitializerImpl"/>
    <bean id="moduleImageInitializer" class="org.jahia.services.content.nodetypes.initializers.ModuleImageChoiceListInitializerImpl"/>
    <bean id="nodetypesInitializer" class="org.jahia.services.content.nodetypes.initializers.NodeTypesChoiceListInitializerImpl"/>
    <bean id="subNodetypesInitializer" class="org.jahia.services.content.nodetypes.initializers.SubNodeTypesChoiceListInitializerImpl"/>    
    <bean id="nodesInitializer" class="org.jahia.services.content.nodetypes.initializers.NodesChoiceListInitializerImpl">
        <property name="sessionFactory" ref="jcrSessionFactory"/>
    </bean>
    <bean id="scriptInitializer" class="org.jahia.services.content.nodetypes.initializers.ScriptChoiceListInitializerImpl"/>
    <bean id="sortableFieldnamesInitializer" class="org.jahia.services.content.nodetypes.initializers.SortableFieldnamesChoiceListInitializerImpl">
    	<property name="excludedNodeTypes">
    		<set>
    			<value type="java.lang.String">jmix:hierarchyNode</value>
    			<value type="java.lang.String">mix:referenceable</value>
    			<value type="java.lang.String">mix:simpleVersionable</value>
    			<value type="java.lang.String">mix:versionable</value>
    			<value type="java.lang.String">nt:base</value>
    		</set>
    	</property>
    	<property name="showHidden" value="false"/>
    	<property name="showProtected" value="true"/>
    </bean>
    <bean id="choiceListInitializers" class="org.jahia.services.content.nodetypes.initializers.ChoiceListInitializerService" factory-method="getInstance">
        <property name="initializers">
            <map>
                <entry key="resourceBundle" value-ref="rbInitializer"/>
                <entry key="country" value-ref="countryInitializerRenderer"/>
                <entry key="image" value-ref="imageInitializer"/>
                <entry key="templates" value-ref="templatesInitializer"/>
                
                <entry key="users" value-ref="usersInitializer"/>
                <entry key="nodetypes" value-ref="nodetypesInitializer"/>
                <entry key="subnodetypes" value-ref="subNodetypesInitializer"/>                
                <entry key="nodes" value-ref="nodesInitializer"/>
                <entry key="script" value-ref="scriptInitializer"/>
                <entry key="flag" value-ref="countryFlagInitializer"/>                
                <entry key="sortableFieldnames" value-ref="sortableFieldnamesInitializer"/>
                <entry key="moduleImage" value-ref="moduleImageInitializer"/>
            </map>
        </property>
    </bean>
    <bean id="choiceListRenderers" class="org.jahia.services.content.nodetypes.renderer.ChoiceListRendererService" factory-method="getInstance">
        <property name="renderers">
            <map>
                <entry key="country" value-ref="countryInitializerRenderer"/>
                <entry key="flagcountry" value-ref="countryFlagInitializer"/>
                <entry key="resourceBundle" value-ref="rbInitializer"/>
            </map>
        </property>
    </bean>
    
    <bean id="org.jahia.services.content.rules.ImageService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.content.rules.ImageService" factory-method="getInstance"/>
        </property>
    </bean>

    <bean id="org.jahia.services.content.rules.Service" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.content.rules.Service" factory-method="getInstance">
            	<property name="taggingService" ref="org.jahia.services.tags.TaggingService"/>
                <property name="userManager" ref="JahiaUserManagerService"/>
                <property name="siteUserManager" ref="JahiaSiteUserManagerService"/>
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="schedulerService" ref="SchedulerService" />
                <property name="sitesService" ref="JahiaSitesService" />
            </bean>
        </property>
    </bean>

    <bean id="org.jahia.services.content.rules.ExtractionService" class="org.jahia.services.content.rules.ExtractionService" factory-method="getInstance">
        <property name="textFilterClasses">
            <value></value>
        </property>
        <property name="extractors">
            <map>
                <entry key="application/msword">
                    <bean class="org.jahia.services.content.rules.OfficeExtractor"/>
                </entry>

                <entry key="image/jpeg">
                    <bean class="org.jahia.services.content.rules.JpegExtractor"/>
                </entry>

                <entry key="image/tiff">
                    <bean class="org.jahia.services.content.rules.TiffExtractor"/>
                </entry>

                <entry key="application/pdf">
                    <bean class="org.jahia.services.content.rules.PdfExtractor"/>
                </entry>
            </map>
        </property>
        <property name="jcrTemplate" ref="jcrTemplate"/>
    </bean>



</beans>
