<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="proxyTemplate" abstract="true"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interceptorNames">
            <list>
                <value>performanceInterceptor</value>
            </list>
        </property>
        <property name="proxyTargetClass" value="true" />
    </bean>

   <bean id="jahiaServiceTemplate" class="org.jahia.services.JahiaService" abstract="true" init-method="start" destroy-method="stop">
      <property name="settingsBean" ref="settingsBean"/>
   </bean>

    <bean id="JahiaTextFileService" parent="proxyTemplate">
        <property name="target" ref="${bigtext.service}" />
    </bean>

    <bean id="DBJahiaText" class="org.jahia.services.files.JahiaTextFileDBBaseService" factory-method="getInstance">
        <property name="bigTextDataManager" ref="org.jahia.hibernate.manager.JahiaBigTextDataManager" />
    </bean>

    <bean id="FileJahiaText" class="org.jahia.services.files.JahiaTextFileBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="cacheService" ref="JahiaCacheService" />
    </bean>

    <bean id="JahiaPageService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.pages.JahiaPageBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="templateService" ref="JahiaPageTemplateService" />
                <property name="pageManager" ref="org.jahia.hibernate.manager.JahiaPagesManager" />
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="jahiaObjectManager" ref="org.jahia.hibernate.manager.JahiaObjectManager" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaPageUserPropService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.pagesusers.JahiaPageUserPropService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="pagesUsersPropManager" ref="org.jahia.hibernate.manager.JahiaPagesUsersPropManager" />
                <property name="cacheService" ref="JahiaCacheService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaPreferencesService" class="org.jahia.services.preferences.JahiaPreferencesService" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="cacheService" ref="JahiaCacheService" />
        <property name="jcrStoreService" ref="JCRStoreService" />
        <property name="providerTypes">
            <map>
                <entry key="simple" value="jnt:simplePreference" />
                <entry key="page" value="jnt:pagePreference"  />
                <entry key="toolbar" value="jnt:toolbarPreference"  />
                <entry key="portlet" value="jnt:portletPreference"  />
                <entry key="layoutmanager" value="jnt:layout"  />
                <entry key="bookmarks" value="jnt:bookmarkPreference"  />
            </map>
        </property>
    </bean>
    <bean id="JahiaPageTemplateService" parent="proxyTemplate" depends-on="org.jahia.hibernate.manager.JahiaTemplateManager,org.jahia.hibernate.manager.JahiaLinkManager">
        <property name="target">
            <bean class="org.jahia.services.pages.JahiaPageTemplateBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="templateManager" ref="org.jahia.hibernate.manager.JahiaTemplateManager" />
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="groupManagerService" ref="JahiaGroupManagerService" />
            </bean>
        </property>
    </bean>
    <bean id="PortletDispatchingProvider" class="org.jahia.services.applications.pluto.PlutoDispatchingProvider" init-method="start" destroy-method="stop"/>
    <bean id="DispatchingService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.applications.DispatchingServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="dispatchingProviders">
                    <map>
                        <entry key="portlet" value-ref="PortletDispatchingProvider" />
                    </map>
                </property>
                <property name="applicationsManager" ref="ApplicationsManagerService"/>
            </bean>
        </property>
    </bean>
    <bean id="ServletContextManager" class="org.jahia.services.applications.ServletContextManager" factory-method="getInstance" init-method="start">
        <property name="cacheService" ref="JahiaCacheService"/>
        <property name="settingsBean" ref="settingsBean"/>
    </bean>
    <bean id="QueryService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.query.QueryServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="sessionFactory" ref="jcrSessionFactory" />
            </bean>
        </property>
    </bean>    
    <bean id="ApplicationsManagerPortletProvider" class="org.jahia.services.applications.pluto.ApplicationsManagerPlutoProvider" init-method="start" destroy-method="stop"/>
    <bean id="ApplicationsManagerService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.applications.ApplicationsManagerServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="managerProviders">
                    <map>
                        <entry key="portlet" value-ref="ApplicationsManagerPortletProvider"/>
                    </map>
                </property>
                <property name="jcrTemplate" ref="jcrTemplate"/>
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="groupManagerService" ref="JahiaGroupManagerService" />
                <property name="servletContextManager" ref="ServletContextManager" />
                <property name="plutoServices" ref="PlutoServices" /> 
            </bean>
        </property>
    </bean>
    <bean id="JahiaFetcherService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.fetchers.JahiaFetcherBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <!-- The scheduler service is required for the file watchers to work properly -->
    <bean id="SchedulerService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.scheduler.SchedulerServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="clusterService" ref="clusterService" />
                <property name="lockService" ref="LockService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaWebAppsDeployerService" parent="proxyTemplate">
        <property name="target">
            <bean class="${JahiaWebAppsDeployerService}" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaFileWatcherService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.deamons.filewatcher.JahiaFileWatcherBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="schedulerService" ref="SchedulerService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaEventService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.events.JahiaEventGeneratorBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="aggregatedEventWeigth">
                    <map>
                        <entry key="contentObjectCreated">
                            <value>2</value><!-- As default is 1, contentObjectCreated event will always be fired before all event of weight 1. -->
                        </entry>
                    </map>
                </property>
                <property name="listenersRegistry" ref="listenersRegistry" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaSitesService" class="org.jahia.services.sites.JahiaSitesBaseService" parent="jahiaServiceTemplate"
          factory-method="getInstance" lazy-init="true">
        <property name="groupService" ref="JahiaGroupManagerService"/>
        <property name="cacheService" ref="JahiaCacheService"/>
        <property name="siteProvider">
            <bean parent="txProxyTemplate">
                <property name="target">
                    <bean class="org.jahia.services.sites.jcr.JCRSitesProvider">
                        <property name="sitePropertyDAO" ref="jahiaSitePropertyDAO" />
                        <property name="jcrTemplate" ref="jcrTemplate"/>
                    </bean>
                </property>
            </bean>
        </property>
        <property name="sitePropertyManager" ref="org.jahia.hibernate.manager.JahiaSitePropertyManager"/>
        <property name="fileWatcherService" ref="JahiaFileWatcherService"/>
        <property name="jahiaAclService" ref="JahiaACLManagerService"/>
        <property name="sessionFactory" ref="jcrSessionFactory"/>
    </bean>

    <bean id="JahiaVersionService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.version.JahiaVersionDBService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService" ref="JahiaCacheService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaHtmlEditorsService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.htmleditors.HtmlEditorsBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="LockService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.lock.LockRegistry" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="lockManager" ref="org.jahia.hibernate.manager.JahiaLockManager" />
                <property name="serverId" value="${cluster.node.serverId}" />
            </bean>
        </property>
    </bean>
    <bean id="CategoryService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.categories.CategoryServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="categoryProvider" ref="org.jahia.services.categories.jcr.JCRCategoryProvider" />
                <property name="fieldsDataManager" ref="org.jahia.hibernate.manager.JahiaFieldsDataManager" />
            </bean>
        </property>
    </bean>
    <bean id="org.jahia.services.categories.jcr.JCRCategoryProvider" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.categories.jcr.JCRCategoryProvider">
                <property name="sessionFactory" ref="jcrSessionFactory"/>
            </bean>
        </property>
    </bean>
    <bean id="org.jahia.services.tags.TaggingService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.tags.TaggingService"/>
        </property>
    </bean>
    <bean id="HtmlParserService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.htmlparser.HtmlParserBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="parserClassName" value="org.jahia.services.htmlparser.TidyHtmlParser" />
                <!-- 
                <property name="parserClassName" value="org.jahia.services.htmlparser.NekoHtmlParser" />
                 -->
            </bean>
        </property>
    </bean>

    <bean id="ImportExportService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.importexport.ImportExportBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="sitesService" ref="JahiaSitesService" />
                <property name="userManagerService" ref="JahiaUserManagerService" />
                <property name="groupManagerService" ref="JahiaGroupManagerService" />
                <property name="jcrStoreService" ref="JCRStoreService" />
                <property name="fileWatcherService" ref="JahiaFileWatcherService" />
                <property name="categoryService" ref="CategoryService"/>
            </bean>
        </property>
    </bean>

    <bean id="org.jahia.services.templates.TemplatePackageRegistry" class="org.jahia.services.templates.TemplatePackageRegistry">
        <property name="settingsBean" ref="settingsBean" />
    </bean>

   <bean id="JahiaTemplateManagerService" class="org.jahia.services.templates.JahiaTemplateManagerService" parent="jahiaServiceTemplate" depends-on="jackrabbit">
        <property name="templatePackageDeployer">
            <bean class="org.jahia.services.templates.TemplatePackageDeployer" depends-on="FileListSync">
		    	<property name="settingsBean" ref="settingsBean" />
		      	<property name="templatePackageRegistry" ref="org.jahia.services.templates.TemplatePackageRegistry" />
		      	<property name="importExportService" ref="ImportExportService" />
      			<property name="contextLoader" ref="TemplatePackageApplicationContextLoader" />
            </bean>
        </property>
        <property name="siteService" ref="JahiaSitesService" />
        <property name="tplService" ref="JahiaPageTemplateService" />
        <property name="templatePackageRegistry" ref="org.jahia.services.templates.TemplatePackageRegistry" />
    </bean>
    
    <bean id="TemplatePackageApplicationContextLoader" class="org.jahia.services.templates.TemplatePackageApplicationContextLoader">
    	<property name="contextConfigLocation" value="templates/**/META-INF/spring/*.xml"/>
    </bean>

    <bean id="JahiaFieldDefinitionsRegistry" class="org.jahia.registries.JahiaFieldDefinitionsRegistry" factory-method="getInstance" init-method="init">
        <property name="cacheService" ref="JahiaCacheService" />
    </bean>

    <bean id="VersionService" class="org.jahia.version.VersionService" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="jahiaVersionManager" ref="org.jahia.hibernate.manager.JahiaVersionManager"/>
        <property name="patchManager" ref="org.jahia.hibernate.manager.JahiaInstalledPatchManager"/>
    </bean>

    <bean id="captchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
        <constructor-arg index="0">
            <bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
                <constructor-arg index="0">
                    <list>
                        <bean id="CaptchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory" >
                            <constructor-arg>
                                <bean id="wordgen" class= "com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator" >
                                    <constructor-arg>
                                        <bean id="filedict" class="com.octo.captcha.component.word.FileDictionary" >
                                            <constructor-arg index="0"><value>toddlist</value></constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                </bean>
                            </constructor-arg>
                            <constructor-arg>
                                <bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage" >
                                    <constructor-arg index="0">
                                        <bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator" >
                                            <constructor-arg index="0"><value>40</value></constructor-arg>
                                            <constructor-arg index="1"><value>50</value></constructor-arg>
                                            <constructor-arg index="2">
                                                <list>
                                                    <bean id="fontArial" class="java.awt.Font" >
                                                        <constructor-arg index="0"><value>Arial</value></constructor-arg>
                                                        <constructor-arg index="1"><value>0</value></constructor-arg>
                                                        <constructor-arg index="2"><value>10</value></constructor-arg>
                                                    </bean>
                                                </list>
                                            </constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                    <constructor-arg index="1">
                                        <bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator" >
                                            <constructor-arg index="0"><value>300</value></constructor-arg>
                                            <constructor-arg index="1"><value>100</value></constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                    <constructor-arg index="2">
                                        <bean id="simpleWhitePaster" class="com.octo.captcha.component.image.textpaster.SimpleTextPaster" >
                                            <constructor-arg type="java.lang.Integer" index="0">
                                                <value>3</value>
                                            </constructor-arg>
                                            <constructor-arg type="java.lang.Integer" index="1">
                                                <value>5</value>
                                            </constructor-arg>
                                            <constructor-arg type="java.awt.Color" index="2">
                                                <bean id="colorGreen" class="java.awt.Color" >
                                                    <constructor-arg index="0"><value>0</value></constructor-arg>
                                                    <constructor-arg index="1"><value>0</value></constructor-arg>
                                                    <constructor-arg index="2"><value>0</value></constructor-arg>
                                                </bean>
                                            </constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                </bean>
                            </constructor-arg>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg index="1"><value>180</value></constructor-arg>
        <constructor-arg index="2"><value>180000</value></constructor-arg>
        <constructor-arg index="3"><value>180</value></constructor-arg>
    </bean>

    <bean class="org.jahia.services.render.RenderService$RenderServiceBeanPostProcessor"/>

    <bean id="RenderService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.render.RenderService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="storeService" ref="JCRStoreService" />
                <property name="templateManagerService" ref="JahiaTemplateManagerService" />
                <property name="scriptResolvers">
                    <list>
                        <bean class="org.jahia.services.render.scripting.FileSystemScriptResolver">
                            <property name="scriptExtensionsOrdering">
                                <list>
                                    <value>jsp</value>
                                    <value>groovy</value>
                                    <value>js</value>
                                    <value>php</value>
                                    <value>vm</value>
                                    <value>fm</value>
                                </list>
                            </property>
                        </bean>                        
                    </list>
                </property>
                <property name="filters" >
                    <list>
                        <bean class="org.jahia.services.render.filter.portlet.PlutoProcessActionFilter">
                            <property name="priority" value="0" />
                            <property name="applyOnMainResource" value="true"/>
                        </bean>
                        <bean class="org.jahia.services.render.filter.BaseAttributesFilter" >
                            <property name="priority" value="5" />
                        </bean>
                        <bean class="org.jahia.services.render.filter.TemplatePermissionCheckFilter" >
                            <property name="priority" value="10" />
                        </bean>
                        <bean class="org.jahia.services.render.filter.MetricsLoggingFilter" >
                            <property name="priority" value="15" />
                            <property name="loggingService" ref="loggingService"/>
                        </bean>
                        <ref bean="cacheFilter"/>
                        <bean class="org.jahia.services.render.filter.TemplateAttributesFilter" >
                            <property name="priority" value="30" />
                        </bean>
                        <bean class="org.jahia.services.render.filter.URLFilter" >
                            <property name="priority" value="35" />
                        </bean>
                        <bean class="org.jahia.services.render.filter.WrapperFilter" >
                            <property name="priority" value="40" />
                        </bean>
                        <bean class="org.jahia.services.render.filter.SkinFilter" >
                            <property name="priority" value="45" />
                        </bean>
                        <bean class="org.jahia.services.render.filter.OptionsFilter" >
                            <property name="priority" value="50" />
                        </bean>
                        <bean class="org.jahia.services.render.filter.TemplateScriptFilter" >
                            <property name="priority" value="99" />
                        </bean>
                    </list>
                </property>
            </bean>
        </property>

    </bean>

    <bean id="org.jahia.services.tasks.TaskService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.tasks.TaskService">
            	<property name="groupManager" ref="JahiaGroupManagerService"/>
            </bean>
        </property>
    </bean>
    
    <bean id="SearchService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.search.SearchServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>    
</beans>
