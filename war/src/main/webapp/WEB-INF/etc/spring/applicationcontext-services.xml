<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="proxyTemplate" abstract="true"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interceptorNames">
            <list>
                <value>performanceInterceptor</value>
            </list>
        </property>
        <property name="proxyTargetClass" value="true" />
    </bean>

   <bean id="jahiaServiceTemplate" class="org.jahia.services.JahiaService" abstract="true" init-method="start" destroy-method="stop">
      <property name="settingsBean" ref="settingsBean"/>
   </bean>

    <bean id="JahiaTextFileService" parent="proxyTemplate">
        <property name="target" ref="${bigtext.service}" />
    </bean>

    <bean id="DBJahiaText" class="org.jahia.services.files.JahiaTextFileDBBaseService" factory-method="getInstance">
        <property name="bigTextDataManager" ref="org.jahia.hibernate.manager.JahiaBigTextDataManager" />
    </bean>

    <bean id="FileJahiaText" class="org.jahia.services.files.JahiaTextFileBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="cacheService" ref="JahiaCacheService" />
    </bean>

    <bean id="JahiaPageService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.pages.JahiaPageBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="templateService" ref="JahiaPageTemplateService" />
                <property name="pageManager" ref="org.jahia.hibernate.manager.JahiaPagesManager" />
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="jahiaObjectManager" ref="org.jahia.hibernate.manager.JahiaObjectManager" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaPageUserPropService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.pagesusers.JahiaPageUserPropService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="pagesUsersPropManager" ref="org.jahia.hibernate.manager.JahiaPagesUsersPropManager" />
                <property name="cacheService" ref="JahiaCacheService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaPreferencesService" class="org.jahia.services.preferences.JahiaPreferencesService" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="cacheService" ref="JahiaCacheService" />
        <property name="jcrStoreService" ref="JCRStoreService" />
        <property name="providerTypes">
            <map>
                <entry key="simple" value="jnt:simplePreference" />
                <entry key="page" value="jnt:pagePreference"  />
                <entry key="toolbar" value="jnt:toolbarPreference"  />
                <entry key="portlet" value="jnt:portletPreference"  />
                <entry key="layoutmanager" value="jnt:layout"  />
                <entry key="bookmarks" value="jnt:bookmarkPreference"  />
            </map>
        </property>
    </bean>
    <bean id="JahiaPageTemplateService" parent="proxyTemplate" depends-on="org.jahia.hibernate.manager.JahiaTemplateManager,org.jahia.hibernate.manager.JahiaLinkManager">
        <property name="target">
            <bean class="org.jahia.services.pages.JahiaPageTemplateBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="templateManager" ref="org.jahia.hibernate.manager.JahiaTemplateManager" />
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="groupManagerService" ref="JahiaGroupManagerService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaFieldService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.fields.JahiaFieldBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="dataManager" ref="org.jahia.hibernate.manager.JahiaFieldsDataManager" />
                <property name="definitionManager" ref="org.jahia.hibernate.manager.JahiaFieldsDefinitionManager" />
                <property name="cacheService" ref="JahiaCacheService" />
            </bean>
        </property>
    </bean>
    <bean id="PortletDispatchingProvider" class="org.jahia.services.applications.pluto.PlutoDispatchingProvider" init-method="start" destroy-method="stop"/>
    <bean id="DispatchingService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.applications.DispatchingServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="dispatchingProviders">
                    <map>
                        <entry key="portlet" value-ref="PortletDispatchingProvider" />
                    </map>
                </property>
                <property name="applicationsManager" ref="ApplicationsManagerService"/>
            </bean>
        </property>
    </bean>
    <bean id="ServletContextManager" class="org.jahia.services.applications.ServletContextManager" factory-method="getInstance" init-method="start">
        <property name="cacheService" ref="JahiaCacheService"/>
        <property name="settingsBean" ref="settingsBean"/>
    </bean>
    <bean id="ApplicationsManagerPortletProvider" class="org.jahia.services.applications.pluto.ApplicationsManagerPlutoProvider" init-method="start" destroy-method="stop"/>
    <bean id="ApplicationsManagerService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.applications.ApplicationsManagerServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="managerProviders">
                    <map>
                        <entry key="portlet" value-ref="ApplicationsManagerPortletProvider"/>
                    </map>
                </property>
                <property name="jcrTemplate" ref="jcrTemplate"/>
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="groupManagerService" ref="JahiaGroupManagerService" />
                <property name="servletContextManager" ref="ServletContextManager" />
                <property name="plutoServices" ref="PlutoServices" /> 
            </bean>
        </property>
    </bean>
    <bean id="JahiaContainersService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.containers.JahiaContainersBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="aclManager" ref="org.jahia.hibernate.manager.JahiaAclManager" />
                <property name="containerManager" ref="org.jahia.hibernate.manager.JahiaContainerManager" />
                <property name="containerDefinitionManager" ref="org.jahia.hibernate.manager.JahiaContainerDefinitionManager" />
                <property name="containerListManager" ref="org.jahia.hibernate.manager.JahiaContainerListManager" />
                <property name="containerStructureManager" ref="org.jahia.hibernate.manager.JahiaContainerStructureManager" />
                <property name="fieldsDataManager" ref="org.jahia.hibernate.manager.JahiaFieldsDataManager" />
            </bean>
        </property>
    </bean>

    <bean id="compassResourceConverter" class="org.jahia.services.search.compass.CompassResourceConverterImpl">
			<property name="compass" ref="compass" />
    </bean>

    <bean id="JahiaSearchService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.search.JahiaSearchBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="sitesService" ref="JahiaSitesService" />
                <property name="schedulerService" ref="SchedulerService" />
                <property name="clusterService" ref="clusterService" />
                <property name="containersService" ref="JahiaContainersService" />
                <property name="groupManagerService" ref="JahiaGroupManagerService" />
                <property name="fieldService" ref="JahiaFieldService" />
                <property name="savedSearchManager" ref="org.jahia.hibernate.manager.JahiaSavedSearchManager" />
                <property name="savedSearchViewManager" ref="org.jahia.hibernate.manager.JahiaSavedSearchViewManager" />
                <property name="config" ref="searchConfig" />
                <property name="indexationConfig" ref="indexationConfig" />
                <property name="filterCacheConfig" ref="filterCacheConfig" />
                <property name="indJobMgr" ref="org.jahia.hibernate.manager.JahiaIndexingJobManager" />
                <property name="serverPropMgr" ref="org.jahia.hibernate.manager.JahiaServerPropertiesManager" />
                <property name="compass" ref="compass" />
                <property name="compassResourceConverter" ref="compassResourceConverter" />
                <property name="searchIndexProcessPipeline" ref="searchIndexProcessPipeline" />
                <property name="savedSearchViewSettings" ref="savedSearchViewSettings" />
                <property name="fieldsToCopyToSearchHit" ref="fieldsToCopyToSearchHit" />
                <property name="fieldsToExcludeFromHighlighting" ref="fieldsToExcludeFromHighlighting" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaSearchIndexationService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.search.indexingscheduler.JahiaSearchIndexationService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="contentIndexationRules" ref="contentIndexationRulesList" />
                <property name="fileFieldIndexationRules" ref="fileFieldIndexationRulesList" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaOpenSearchService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.opensearch.JahiaOpenSearchBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaFacetingService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.search.facets.JahiaFacetingBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService" ref="JahiaCacheService" />            
            </bean>
        </property>
    </bean>                
    <bean id="JahiaFetcherService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.fetchers.JahiaFetcherBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <!-- The scheduler service is required for the file watchers to work properly -->
    <bean id="SchedulerService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.scheduler.SchedulerServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="clusterService" ref="clusterService" />
                <property name="lockService" ref="LockService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaWebAppsDeployerService" parent="proxyTemplate">
        <property name="target">
            <bean class="${JahiaWebAppsDeployerService}" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaFileWatcherService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.deamons.filewatcher.JahiaFileWatcherBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="schedulerService" ref="SchedulerService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaEventService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.events.JahiaEventGeneratorBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="aggregatedEventWeigth">
                    <map>
                        <entry key="contentObjectCreated">
                            <value>2</value><!-- As default is 1, contentObjectCreated event will always be fired before all event of weight 1. -->
                        </entry>
                    </map>
                </property>
                <property name="listenersRegistry" ref="listenersRegistry" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaAuditLogManagerService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.audit.JahiaDBAuditLogManagerService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="logManager" ref="org.jahia.hibernate.manager.JahiaAuditLogManager" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaSitesService" class="org.jahia.services.sites.JahiaSitesBaseService" parent="jahiaServiceTemplate"
          factory-method="getInstance" lazy-init="true">
        <property name="groupService" ref="JahiaGroupManagerService"/>
        <property name="cacheService" ref="JahiaCacheService"/>
        <property name="siteManager" ref="org.jahia.hibernate.manager.JahiaSiteManager"/>
        <property name="sitePropertyManager" ref="org.jahia.hibernate.manager.JahiaSitePropertyManager"/>
        <property name="fileWatcherService" ref="JahiaFileWatcherService"/>
        <property name="jahiaAclService" ref="JahiaACLManagerService"/>
        <property name="sessionFactory" ref="jcrSessionFactory"/>
    </bean>
    <bean id="JahiaWebdavService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.webdav.JahiaWebdavBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="fieldsDataManager" ref="org.jahia.hibernate.manager.JahiaFieldsDataManager" />
                <property name="fieldXRefManager" ref="org.jahia.hibernate.manager.JahiaFieldXRefManager" />
            </bean>
        </property>
    </bean>

    <bean id="JahiaVersionService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.version.JahiaVersionDBService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService" ref="JahiaCacheService" />
            </bean>
        </property>
    </bean>
    <bean id="JahiaHtmlEditorsService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.htmleditors.HtmlEditorsBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaSiteMapService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.sitemap.JahiaSiteMapService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="LockService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.lock.LockRegistry" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="lockManager" ref="org.jahia.hibernate.manager.JahiaLockManager" />
                <property name="serverId" value="${cluster.node.serverId}" />
            </bean>
        </property>
    </bean>
    <bean id="CategoryService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.categories.CategoryServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService" ref="JahiaCacheService" />
                <property name="categoryProvider" ref="org.jahia.services.categories.jcr.JCRCategoryProvider" />
                <property name="fieldsDataManager" ref="org.jahia.hibernate.manager.JahiaFieldsDataManager" />
            </bean>
        </property>
    </bean>
    <bean id="org.jahia.services.categories.jcr.JCRCategoryProvider" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.categories.jcr.JCRCategoryProvider">
                <property name="sessionFactory" ref="jcrSessionFactory"/>
            </bean>
        </property>
    </bean>    
    <bean id="HtmlParserService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.htmlparser.HtmlParserBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="parserClassName" value="org.jahia.services.htmlparser.TidyHtmlParser" />
                <!-- 
                <property name="parserClassName" value="org.jahia.services.htmlparser.NekoHtmlParser" />
                 -->
            </bean>
        </property>
    </bean>
    <bean id="MetadataService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.metadata.MetadataBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="metadataEventListener" ref="eventListenerBean" />
                <property name="fieldDefinitionsRegistry" ref="JahiaFieldDefinitionsRegistry" />
            </bean>
        </property>
    </bean>

    <bean id="TimeBasedPublishingService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.timebasedpublishing.TimeBasedPublishingImplService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="jahiaObjectMgr" ref="org.jahia.hibernate.manager.JahiaObjectManager" />
                <property name="ruleMgr" ref="org.jahia.hibernate.manager.JahiaRetentionRuleManager" />
                <property name="ruleDefMgr" ref="org.jahia.hibernate.manager.JahiaRetentionRuleDefManager" />
                <property name="defaultRulesDef" ref="retentionRuleRefs" />
                <property name="config" ref="settings" />
                <property name="schedulerService" ref="SchedulerService" />
                <property name="batchLoadingSize" value="20"/>
            </bean>
        </property>
    </bean>
    <bean id="ImportExportService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.importexport.ImportExportBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="sitesService" ref="JahiaSitesService" />
                <property name="userManagerService" ref="JahiaUserManagerService" />
                <property name="groupManagerService" ref="JahiaGroupManagerService" />
                <property name="categoryService" ref="CategoryService" />
                <property name="schedulerService" ref="SchedulerService" />
                <property name="fileWatcherService" ref="JahiaFileWatcherService" />
                <property name="overwriteResourcesByImport" value="true"/>
                <property name="exporters">
                    <map>
                        <entry>
                            <key><value>legacy</value></key>
                            <bean class="org.jahia.services.importexport.JahiaLegacyExporter" />
                        </entry>
                        <entry>
                            <key><value>doc</value></key>
                            <bean class="org.jahia.services.importexport.DocumentViewExporter" />
                        </entry>
                    </map>
                </property>
                <property name="excludedResources">
                    <list>
                        <value>com/gargoylesoftware/htmlunit/*</value>
                        <value>components/guestbook/*</value>
                        <value>org/apache/*</value>
                        <value>org/hibernate/*</value>
                        <value>org/jahia/*</value>
                        <value>ApplicationResources*</value>
                        <value>ehcache-hibernate.xml</value>
                        <value>ehcache-jahia.xml</value>
                        <value>jahia-cache-service.xml</value>
                        <value>JahiaInternalResources*</value>
                        <value>JahiaMessageResources*</value>
                        <value>jahiapublickeystore</value>
                        <value>jahia-tx-cache-service.xml</value>
                        <value>mbeans-descriptors.xml</value>
                        <value>nstep-workflowResources*</value>
                        <value>treecache.xml</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="org.jahia.services.templates.TemplatePackageRegistry" class="org.jahia.services.templates.TemplatePackageRegistry" depends-on="JahiaStoreProvider">
        <property name="settingsBean" ref="settingsBean" />
    </bean>

   <bean id="JahiaTemplateManagerService" class="org.jahia.services.templates.JahiaTemplateManagerService" parent="jahiaServiceTemplate">
        <property name="templatePackageDeployer">
            <bean class="org.jahia.services.templates.TemplatePackageDeployer" depends-on="FileListSync">
		    	<property name="settingsBean" ref="settingsBean" />
		      	<property name="templatePackageRegistry" ref="org.jahia.services.templates.TemplatePackageRegistry" />
            </bean>
        </property>
        <property name="siteService" ref="JahiaSitesService" />
        <property name="tplService" ref="JahiaPageTemplateService" />
        <property name="pageService" ref="JahiaPageService" />
        <property name="templatePackageRegistry" ref="org.jahia.services.templates.TemplatePackageRegistry" />
        <property name="pageDefinitionHelper">
            <bean id="PageDefinitionHelper" class="org.jahia.services.templates.PageDefinitionHelper" depends-on="JahiaContainerDefinitionsRegistry">
		      	<property name="templatePackageRegistry" ref="org.jahia.services.templates.TemplatePackageRegistry" />
		      	<property name="containerDefRegistry" ref="JahiaContainerDefinitionsRegistry" />
		      	<property name="searchService" ref="JahiaSearchService" />      
            </bean>
        </property>
    </bean>

    <bean id="JahiaFieldDefinitionsRegistry" class="org.jahia.registries.JahiaFieldDefinitionsRegistry" factory-method="getInstance" init-method="init">
        <property name="cacheService" ref="JahiaCacheService" />
        <property name="fieldService" ref="JahiaFieldService" />
    </bean>

    <bean id="JahiaContainerDefinitionsRegistry" class="org.jahia.registries.JahiaContainerDefinitionsRegistry" depends-on="JahiaTemplateManagerService" factory-method="getInstance" init-method="init">
        <property name="cacheService" ref="JahiaCacheService" />
        <property name="containersService" ref="JahiaContainersService" />
        <property name="tplService" ref="JahiaPageTemplateService" />
        <property name="templateManagerService" ref="JahiaTemplateManagerService" />        
    </bean>

    <bean id="QueryService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.query.QueryService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="sessionFactory" ref="jcrSessionFactory" />
            </bean>        
        </property>
    </bean>

    <bean id="VersionService" class="org.jahia.version.VersionService" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="jahiaVersionManager" ref="org.jahia.hibernate.manager.JahiaVersionManager"/>
        <property name="patchManager" ref="org.jahia.hibernate.manager.JahiaInstalledPatchManager"/>
    </bean>


    <bean id="ThemeService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.theme.ThemeService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="defaultCssFileName" value="css.css"/>
                <property name="cssEditModeFileName" value="edit.css"/>
                <property name="browserUserAgentSpecificCssMap">
                    <map>
                        <entry key="MSIE 6.0" value="ie6.css"/>
                        <entry key="MSIE 5" value="ie5.css"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>


    <bean id="captchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
        <constructor-arg index="0">
            <bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
                <constructor-arg index="0">
                    <list>
                        <bean id="CaptchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory" >
                            <constructor-arg>
                                <bean id="wordgen" class= "com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator" >
                                    <constructor-arg>
                                        <bean id="filedict" class="com.octo.captcha.component.word.FileDictionary" >
                                            <constructor-arg index="0"><value>toddlist</value></constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                </bean>
                            </constructor-arg>
                            <constructor-arg>
                                <bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage" >
                                    <constructor-arg index="0">
                                        <bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator" >
                                            <constructor-arg index="0"><value>40</value></constructor-arg>
                                            <constructor-arg index="1"><value>50</value></constructor-arg>
                                            <constructor-arg index="2">
                                                <list>
                                                    <bean id="fontArial" class="java.awt.Font" >
                                                        <constructor-arg index="0"><value>Arial</value></constructor-arg>
                                                        <constructor-arg index="1"><value>0</value></constructor-arg>
                                                        <constructor-arg index="2"><value>10</value></constructor-arg>
                                                    </bean>
                                                </list>
                                            </constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                    <constructor-arg index="1">
                                        <bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator" >
                                            <constructor-arg index="0"><value>300</value></constructor-arg>
                                            <constructor-arg index="1"><value>100</value></constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                    <constructor-arg index="2">
                                        <bean id="simpleWhitePaster" class="com.octo.captcha.component.image.textpaster.SimpleTextPaster" >
                                            <constructor-arg type="java.lang.Integer" index="0">
                                                <value>3</value>
                                            </constructor-arg>
                                            <constructor-arg type="java.lang.Integer" index="1">
                                                <value>5</value>
                                            </constructor-arg>
                                            <constructor-arg type="java.awt.Color" index="2">
                                                <bean id="colorGreen" class="java.awt.Color" >
                                                    <constructor-arg index="0"><value>0</value></constructor-arg>
                                                    <constructor-arg index="1"><value>0</value></constructor-arg>
                                                    <constructor-arg index="2"><value>0</value></constructor-arg>
                                                </bean>
                                            </constructor-arg>
                                        </bean>
                                    </constructor-arg>
                                </bean>
                            </constructor-arg>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg index="1"><value>180</value></constructor-arg>
        <constructor-arg index="2"><value>180000</value></constructor-arg>
        <constructor-arg index="3"><value>180</value></constructor-arg>
    </bean>

    <bean id="RenderService" parent="proxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.render.RenderService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="storeService" ref="JCRStoreService" />
                <property name="scriptResolvers">
                    <list>
                        <bean class="org.jahia.services.render.RequestDispatcherScriptResolver"/>
                    </list>
                </property>
            </bean>
        </property>

    </bean>

    <bean id="extraction" class="org.jahia.services.content.rules.ExtractionService" factory-method="getInstance">
        <property name="textFilterClasses">
            <value>org.apache.jackrabbit.extractor.MsWordTextExtractor,
                   org.apache.jackrabbit.extractor.MsExcelTextExtractor,
                   org.apache.jackrabbit.extractor.MsPowerPointTextExtractor,
                   org.apache.jackrabbit.extractor.PdfTextExtractor,
                   org.apache.jackrabbit.extractor.OpenOfficeTextExtractor,
                   org.apache.jackrabbit.extractor.RTFTextExtractor,
                   org.apache.jackrabbit.extractor.HTMLTextExtractor,
                   org.apache.jackrabbit.extractor.XMLTextExtractor,
                   org.apache.jackrabbit.extractor.PlainTextExtractor
            </value>
        </property>
        <property name="extractors">
            <map>
                <entry key="application/msword">
                    <bean class="org.jahia.services.content.rules.OfficeExtractor"/>
                </entry>

                <entry key="image/jpeg">
                    <bean class="org.jahia.services.content.rules.ExifExtractor"/>
                </entry>

                <entry key="application/pdf">
                    <bean class="org.jahia.services.content.rules.PdfExtractor"/>
                </entry>
            </map>
        </property>
        <property name="jcrTemplate" ref="jcrTemplate"/>
    </bean>

</beans>
