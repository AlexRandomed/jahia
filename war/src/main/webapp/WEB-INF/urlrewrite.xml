<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 3.1//EN"
        "http://tuckey.org/res/dtds/urlrewrite3.1.dtd">

<!--

    Configuration file for UrlRewriteFilter
    http://tuckey.org/urlrewrite/

-->
<urlrewrite>

    <rule>
        <note>
            The rule means that requests to /test/status/ will be redirected to /rewrite-status
            the url will be rewritten.
        </note>
        <from>/test/status/</from>
        <to type="redirect">%{context-path}/rewrite-status</to>
    </rule>


    <outbound-rule>
        <note>
            The outbound-rule specifies that when response.encodeURL is called (if you are using JSTL c:url)
            the url /rewrite-status will be rewritten to /test/status/.

            The above rule and this outbound-rule means that end users should never see the
            url /rewrite-status only /test/status/ both in thier location bar and in hyperlinks
            in your pages.
        </note>
        <from>/rewrite-status</from>
        <to>/test/status/</to>
    </outbound-rule>


    <!--

    INSTALLATION

        in your web.xml add...

        <filter>
            <filter-name>UrlRewriteFilter</filter-name>
            <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
            <init-param>
                <param-name>logLevel</param-name>
                <param-value>WARN</param-value>
            </init-param>
        </filter>
        <filter-mapping>
            <filter-name>UrlRewriteFilter</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>

     EXAMPLES

     Redirect one url
        <rule>
            <from>/some/old/page.html</from>
            <to type="redirect">/very/new/page.html</to>
        </rule>

    Redirect a directory
        <rule>
            <from>/some/olddir/(.*)</from>
            <to type="redirect">/very/newdir/$1</to>
        </rule>

    Clean a url
        <rule>
            <from>/products/([0-9]+)</from>
            <to>/products/index.jsp?product_id=$1</to>
        </rule>
    eg, /products/1234 will be passed on to /products/index.jsp?product_id=1234 without the user noticing.

    Browser detection
        <rule>
            <condition name="user-agent">Mozilla/[1-4]</condition>
            <from>/some/page.html</from>
            <to>/some/page-for-old-browsers.html</to>
        </rule>
    eg, will pass the request for /some/page.html on to /some/page-for-old-browsers.html only for older
    browsers whose user agent srtings match Mozilla/1, Mozilla/2, Mozilla/3 or Mozilla/4.

    -->
 

<!-- Inboound rules

The following are only examples and should be rearanged according to your needs and to your specific implementation of Jahia


Example usage:

http://localhost:8080/jahia/page25.html <-> http://localhost:8080/jahia/Jahia/pid/25
http://localhost:8080/jahia/Jahia/page25.html <-> http://localhost:8080/jahia/Jahia/Urlkey1/UrlKey2/pid/25 (iterativelly you can have as many urlkey as you want)

If you type in the following path on your browser, it will still work:

http://localhost:8080/jahia/Jahia/page5_en.html <-> http://localhost:8080/jahia/Jahia/lang/op/normal/en/pid/25
http://localhost:8080/jahia/Jahia/UrlKey1/page5.html <-> http://localhost:8080/jahia/Jahia/Urlkey1/lang/en/pid/25 
http://localhost:8080/jahia/Jahia/UrlKey1/UrlKey2/page5_en.html <-> http://localhost:8080/jahia/Jahia/Urlkey1/UrlKey2/lang/en/pid/25


These rules support multilingual websites


--> 

<!-- rule for site export and other pages that could cause problems-->
<rule>
<from>^/(.*?)/page([0-9]+).html/(.*?)$</from>
<to last="true">/$1/pid/$2/$3</to>
</rule>

<!-- rule for any regular page-->
<rule>
<from>^/(.*?)/page([0-9]+).html$</from>
<to>/$1/pid/$2</to>
</rule>

<!-- GXT resources-->
<rule>
<from>^(.*?)/jsp/jahia/gwt/(.*?)/images/(.*?)</from>
<to last ="true">$1/jsp/jahia/gwt/resources/images/$3</to>
</rule>

<!-- rule for any gwt page-->
<rule>
<from>^(.*?)/jsp/jahia/gwt/(.*?)</from>
<to last ="true">$1/jsp/jahia/gwt/$2</to>
</rule>


<!-- Outbound rules-->

<!-- rule for the export module -->
<outbound-rule>
<from>/engineName/(.*?)/pid/([0-9]+)$</from>
<to last="true">/engineName/$1/pid/$2</to>
</outbound-rule>

<!-- rule for any regular page-->
<outbound-rule>
<from>/pid/([0-9]+)$</from>
<to>/page$1.html</to>
</outbound-rule>

</urlrewrite>

