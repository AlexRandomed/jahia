<?xml version="1.0" encoding="UTF-8"?>
<!--

    
    This file is part of Jahia: An integrated WCM, DMS and Portal Solution
    Copyright (C) 2002-2009 Jahia Limited. All rights reserved.
    
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
    
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.
    
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
    
    As a special exception to the terms and conditions of version 2.0 of
    the GPL (or any later version), you may redistribute this Program in connection
    with Free/Libre and Open Source Software ("FLOSS") applications as described
    in Jahia's FLOSS exception. You should have recieved a copy of the text
    describing the FLOSS exception, and it is also available here:
    http://www.jahia.com/license"
    
    Commercial and Supported Versions of the program
    Alternatively, commercial and supported versions of the program may be used
    in accordance with the terms contained in a separate written agreement
    between you and Jahia Limited. If you are unsure which license is appropriate
    for your use, please contact the sales department at sales@jahia.com.

-->

<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">


<beans>

   <bean id="jahiaServiceTemplate" class="org.jahia.services.JahiaService" abstract="true">
      <property name="settingsBean">
          <ref bean="settingsBean"/>
      </property>
   </bean>

    <!-- You can change here the cache implementation that Jahia will use, notably for it's HTML cache, internal
         caches. For DB caches, this is now managed by the Hibernate implementation, and is configured in the
         applicationContext-hibernate.xml file.
    -->
    <bean id="ClusterService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.cluster.JGroupsClusterService" parent="jahiaServiceTemplate">
                <property name="activated">
                  <value>false</value>
                </property>
                <property name="channelGroupName">
                  <value>JahiaCluster</value>
                </property>
                <property name="channelProperties">
                  <value>UDP(mcast_addr=231.12.21.133;mcast_port=45000;ip_ttl=32;mcast_send_buf_size=1000000;mcast_recv_buf_size=1000000):PING(timeout=2000;num_initial_members=2):MERGE2(min_interval=5000;max_interval=10000):FD_SOCK:VERIFY_SUSPECT(timeout=1500):pbcast.NAKACK(gc_lag=50;retransmit_timeout=300,600,1200,2400,4800):pbcast.STABLE(desired_avg_gossip=20000):UNICAST(timeout=5000):FRAG(frag_size=8096;down_thread=false;up_thread=false):pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;shun=false;print_local_addr=true)</value>
                </property>
            </bean>
        </property>
    </bean>

    <!--
      The following beans offer different cache implementations, ranging from the very simple SimpleCacheProvider
      that doesn't support clustering, to a JMS-based implementation, an OSCache one and finally an implementation
      that uses the Clustering service for communication.
    -->
    <!--bean id="org.jahia.services.cache.CacheProvider" class="org.jahia.services.cache.oscache.OSCacheProvider"/-->
    <!--bean id="org.jahia.services.cache.CacheProvider" class="org.jahia.services.cache.jms.JMSCacheProvider" /-->
    <!--bean id="org.jahia.services.cache.CacheProvider" class="org.jahia.services.cache.simple.SimpleCacheProvider" /-->
    <bean id="org.jahia.services.cache.CacheProvider" class="org.jahia.services.cache.clusterservice.ClusterServiceCacheProvider">
        <property name="clusterService">
            <ref bean="ClusterService" />
        </property>
    </bean>


    <bean id="JahiaCacheService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.cache.CacheFactory" parent="jahiaServiceTemplate" factory-method="getInstance" >
                <property name="cacheProvider">
                    <ref bean="org.jahia.services.cache.CacheProvider" />
                </property>
            </bean>
        </property>
    </bean>
<!--  Comment the above bean and uncomment the next one to use dbms storage for big text  -->
    <bean id="JahiaTextFileService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.files.JahiaTextFileBaseService" parent="jahiaServiceTemplate" factory-method="getInstance" >
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
            </bean>
        </property>
    </bean>
    <!--<bean id="JahiaTextFileService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.files.JahiaTextFileDBBaseService" factory-method="getInstance"/>
        </property>
    </bean>-->
    <bean id="JahiaPageService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.pages.JahiaPageBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="templateService">
                    <ref bean="JahiaPageTemplateService"/>
                </property>
                <property name="pageManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaPagesManager"/>
                </property>
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
                <property name="jahiaObjectManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaObjectManager"/>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="profilingAdvice"/>
            </list>
        </property>
    </bean>
    <bean id="JahiaPageUserPropService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.pagesusers.JahiaPageUserPropService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="pageManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaPagesUsersPropManager"/>
                </property>
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="profilingAdvice"/>
            </list>
        </property>
    </bean>
    <bean id="JahiaPageTemplateService" parent="txProxyTemplate" depends-on="org.jahia.hibernate.manager.JahiaTemplateManager,org.jahia.hibernate.manager.JahiaLinkManager">
        <property name="target">
            <bean class="org.jahia.services.pages.JahiaPageTemplateBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="templateManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaTemplateManager"/>
                </property>
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaFieldService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.fields.JahiaFieldBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="dataManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaFieldsDataManager"/>
                </property>
                <property name="definitionManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaFieldsDefinitionManager"/>
                </property>
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="profilingAdvice"/>
            </list>
        </property>
    </bean>
    <bean id="ServletDispatchingProvider" class="org.jahia.services.applications.servlets.ServletDispatchingProvider" factory-method="getInstance" init-method="start" destroy-method="stop">
        <property name="cacheService">
            <ref bean="JahiaCacheService"/>
        </property>
        <property name="settingsBean">
            <ref bean="settingsBean"/>
        </property>
    </bean>
    <bean id="PortletDispatchingProvider" class="org.jahia.services.applications.jetspeed.JetspeedDispatchingProvider" factory-method="getInstance" init-method="start" destroy-method="stop">
    </bean>
    <bean id="DispatchingService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.applications.DispatchingServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="dispatchingProviders">
                    <map>
                        <entry>
                            <key><value>servlet</value></key>
                            <ref bean="ServletDispatchingProvider" />
                        </entry>
                        <entry>
                            <key><value>portlet</value></key>
                            <ref bean="PortletDispatchingProvider" />
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="profilingAdvice"/>
            </list>
        </property>
    </bean>
    <bean id="JahiaContainersService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.containers.JahiaContainersBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="aclManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaAclManager"/>
                </property>
                <property name="containerManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaContainerManager"/>
                </property>
                <property name="containerDefinitionManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaContainerDefinitionManager"/>
                </property>
                <property name="containerListManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaContainerListManager"/>
                </property>
                <property name="containerStructureManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaContainerStructureManager"/>
                </property>
                <property name="fieldsDataManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaFieldsDataManager"/>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="profilingAdvice"/>
            </list>
        </property>
    </bean>


    <bean id="JahiaSiteUserManagerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.usermanager.JahiaSiteUserManagerDBService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="userManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaUserManager"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaSiteGroupManagerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.usermanager.JahiaSiteGroupManagerDBService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="groupManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaGroupManager"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaACLManagerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.acl.JahiaACLManagerService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
                <property name="aclManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaAclManager"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaFetcherService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.fetchers.JahiaFetcherBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaTemplatesDeployerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.templates_deployer.JahiaTemplatesDeployerBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaWebAppsDeployerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.webapps_deployer.JahiaTomcatWebAppsDeployerBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="SchedulerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.scheduler.SchedulerServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaFileWatcherService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.deamons.filewatcher.JahiaFileWatcherBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="schedulerService">
                    <ref bean="SchedulerService"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaEventService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.events.JahiaEventGeneratorBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="JahiaAuditLogManagerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.audit.JahiaDBAuditLogManagerService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="logManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaAuditLogManager"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaSitesService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.sites.JahiaSitesBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
                <property name="siteManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaSiteManager"/>
                </property>
                <property name="sitePropertyManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaSitePropertyManager"/>
                </property>
                <property name="templateDeployerService">
                    <ref bean="JahiaTemplatesDeployerService"/>
                </property>
                <property name="webAppsDeployerService">
                    <ref bean="JahiaWebAppsDeployerService"/>
                </property>
                <property name="fileWatcherService">
                    <ref bean="JahiaFileWatcherService"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaHomepagesService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.homepages.JahiaHomepagesBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="homepageManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaHomepageManager"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaVersionService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.version.JahiaVersionDBService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>

    <bean id="JahiaSiteMapService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.sitemap.JahiaSiteMapService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="MailService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.mail.MailServiceImpl" parent="jahiaServiceTemplate" >
            </bean>
        </property>
    </bean>
    <bean id="LockService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.lock.LockRegistry" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="lockManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaLockManager"/>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="profilingAdvice"/>
                <bean class="org.springframework.aop.support.DefaultPointcutAdvisor">
                    <property name="advice">
                        <bean class="org.jahia.spring.advice.CacheAdvice">
                            <property name="cacheName">
                                <value>LockServiceCacheAdviceBooleanMethod</value>
                            </property>
                        </bean>
                    </property>
                    <property name="pointcut">
                        <bean class="org.springframework.aop.support.NameMatchMethodPointcut">
                            <property name="mappedNames">
                                <list>
                                    <value>isAcquireable</value>
                                    <value>isAlreadyAcquired</value>
                                    <value>isAlreadyAcquiredInContext</value>
                                    <value>isStealed</value>
                                    <value>isStealedInContext</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
                <bean class="org.springframework.aop.support.DefaultPointcutAdvisor">
                    <property name="advice">
                        <bean class="org.jahia.spring.advice.CacheAdvice">
                            <property name="cacheName">
                                <value>LockServiceCacheAdviceLockMethod</value>
                            </property>
                        </bean>
                    </property>
                    <property name="pointcut">
                        <bean class="org.springframework.aop.support.NameMatchMethodPointcut">
                            <property name="mappedNames">
                                <list>
                                    <value>getInfo</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
                <bean class="org.springframework.aop.support.DefaultPointcutAdvisor">
                    <property name="advice">
                        <bean class="org.jahia.spring.advice.UnCacheAdvice">
                            <property name="cacheNames">
                            	<list>
                                <value>LockServiceCacheAdviceBooleanMethod</value>
                                <value>LockServiceCacheAdviceLockMethod</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                    <property name="pointcut">
                        <bean class="org.springframework.aop.support.NameMatchMethodPointcut">
                            <property name="mappedNames">
                                <list>
                                    <value>acquire</value>
                                    <value>nuke</value>
                                    <value>release</value>
                                    <value>steal</value>
                                    <value>reserve</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="CategoryService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.categories.CategoryServiceImpl" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="cacheService">
                    <ref bean="JahiaCacheService"/>
                </property>
                <property name="categoryManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaCategoryManager"/>
                </property>
                <property name="resourceManager">
                    <ref bean="org.jahia.hibernate.manager.JahiaResourceManager"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="HtmlParserService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.htmlparser.HtmlParserBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="jahiaConfig">
                    <ref bean="jahiaConfigBean"/>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="MetadataService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.metadata.MetadataBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="metadataDefinitionConfig">
                    <ref bean="metadataDefinitionConfig"/>
                </property>
                <property name="metadataEventListener">
                    <ref bean="eventListenerBean"/>
                </property>
            </bean>
        </property>
        <property name="preInterceptors">
            <list>
                <ref bean="profilingAdvice"/>
            </list>
        </property>
    </bean>
    <bean id="JCRStoreService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.content.impl.jackrabbit.JackrabbitStoreProvider" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="ImportExportService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.importexport.ImportExportBaseService" parent="jahiaServiceTemplate" factory-method="getInstance">
            </bean>
        </property>
    </bean>
    <bean id="profilingAdvice" class="org.jahia.spring.advice.ProfilingInterceptor">
        <property name="executionTimeMinimum">
            <value>20</value>
        </property>
    </bean>
    <bean id="JahiaUserManagerDBProvider" class="org.jahia.services.usermanager.JahiaUserManagerDBProvider" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="groupService">
            <ref bean="JahiaGroupManagerService"/>
        </property>
        <property name="aclService">
            <ref bean="JahiaACLManagerService"/>
        </property>
        <property name="userManager">
            <ref bean="org.jahia.hibernate.manager.JahiaUserManager"/>
        </property>
        <property name="key">
            <value>jahia_db</value>
        </property>
        <property name="defaultProvider">
            <value>true</value>
        </property>
        <property name="readOnly">
            <value>false</value>
        </property>
        <property name="priority">
            <value>1</value>
        </property>
    </bean>

    <!--
    <bean id="JahiaUserManagerLDAPProvider" class="org.jahia.services.usermanager.JahiaUserManagerLDAPProvider" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="groupService">
            <ref bean="JahiaGroupManagerService"/>
        </property>
        <property name="aclService">
            <ref bean="JahiaACLManagerService"/>
        </property>
        <property name="cacheService">
            <ref bean="JahiaCacheService"/>
        </property>
        <property name="key">
            <value>ldap</value>
        </property>
        <property name="defaultProvider">
          <value>false</value>
        </property>
        <property name="readOnly">
          <value>true</value>
        </property>
        <property name="priority">
          <value>2</value>
        </property>
    </bean>
    -->

    <bean id="JahiaUserManagerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.usermanager.JahiaUserManagerRoutingService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="providersTable">
                    <map>
                        <entry>
                            <key><value>jahia_db</value></key>
                            <ref bean="JahiaUserManagerDBProvider" />
                        </entry>
                        <!--
                        <entry>
                            <key><value>ldap</value></key>
                            <ref bean="JahiaUserManagerLDAPProvider" />
                        </entry>
                        -->
                    </map>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="JahiaGroupManagerDBProvider" class="org.jahia.services.usermanager.JahiaGroupManagerDBProvider" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="key">
            <value>jahia_db</value>
        </property>
        <property name="groupManager">
            <ref bean="org.jahia.hibernate.manager.JahiaGroupManager"/>
        </property>
        <property name="defaultProvider">
            <value>true</value>
        </property>
        <property name="readOnly">
            <value>false</value>
        </property>
        <property name="priority">
            <value>1</value>
        </property>
    </bean>

    <!--
    <bean id="JahiaGroupManagerLDAPProvider" class="org.jahia.services.usermanager.JahiaGroupManagerLDAPProvider" parent="jahiaServiceTemplate" factory-method="getInstance">
        <property name="cacheService">
            <ref bean="JahiaCacheService"/>
        </property>
        <property name="key">
            <value>ldap</value>
        </property>
        <property name="defaultProvider">
          <value>false</value>
        </property>
        <property name="readOnly">
          <value>true</value>
        </property>
        <property name="priority">
          <value>2</value>
        </property>
    </bean>
    -->
    <bean id="JahiaGroupManagerService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.jahia.services.usermanager.JahiaGroupManagerRoutingService" parent="jahiaServiceTemplate" factory-method="getInstance">
                <property name="providersTable">
                    <map>
                        <entry>
                            <key><value>jahia_db</value></key>
                            <ref bean="JahiaGroupManagerDBProvider" />
                        </entry>
                        <!--
                        <entry>
                            <key><value>ldap</value></key>
                            <ref bean="JahiaGroupManagerLDAPProvider" />
                        </entry>
                        -->
                    </map>
                </property>
            </bean>
        </property>
    </bean>
</beans>