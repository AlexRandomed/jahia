<!--

    ==========================================================================================
    =                   JAHIA'S DUAL LICENSING - IMPORTANT INFORMATION                       =
    ==========================================================================================

                                    http://www.jahia.com

        Copyright (C) 2002-2022 Jahia Solutions Group SA. All rights reserved.

        THIS FILE IS AVAILABLE UNDER TWO DIFFERENT LICENSES:
        1/GPL OR 2/JSEL

        1/ GPL
        ==================================================================================

        IF YOU DECIDE TO CHOOSE THE GPL LICENSE, YOU MUST COMPLY WITH THE FOLLOWING TERMS:

        This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program. If not, see <http://www.gnu.org/licenses />.


        2/ JSEL - Commercial and Supported Versions of the program
        ===================================================================================

        IF YOU DECIDE TO CHOOSE THE JSEL LICENSE, YOU MUST COMPLY WITH THE FOLLOWING TERMS:

        Alternatively, commercial and supported versions of the program - also known as
        Enterprise Distributions - must be used in accordance with the terms and conditions
        contained in a separate written agreement between you and Jahia Solutions Group SA.

        If you are unsure which license is appropriate for your use,
        please contact the sales department at sales@jahia.com.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.jahia.server</groupId>
        <artifactId>docker-parent-core</artifactId>
        <version>8.1.2.0-SNAPSHOT</version>
    </parent>
    <artifactId>docker-distribution-parent</artifactId>
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>

    <properties>
        <parent.tag>${project.version}</parent.tag>
        <image.repo.classifier>-dev</image.repo.classifier>
        <image.repo />
        <image.tag>${project.version}</image.tag>
    </properties>

    <repositories>
        <repository>
            <id>jahia-public</id>
            <name>Jahia Public Repository</name>
            <url>https://devtools.jahia.com/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>set-skip</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                if (project.artifactId == 'docker-distribution-parent') {
                                    project.properties['build.skip'] = "true"
                                }
                            </source>
                        </configuration>
                    </execution>
                    <execution>
                        <id>gather-artifact-ids</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                if (project.properties['build.skip'] != 'true') {
                                    def properties = []
                                    new File(project.build.directory, 'dependency').eachFile { file -&gt;
                                        file.eachLine { line -&gt;
                                            if ((matcher = line =~ /.*mvn:([^\/]+)\/([^\/]+).*/)) {
                                                properties.add(matcher[0][2]);
                                            }
                                        }
                                    }
                                    project.properties.artifactIds = properties.join(',');
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-yaml</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>true</excludeTransitive>
                            <includeTypes>yaml</includeTypes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>false</excludeTransitive>
                            <useRepositoryLayout>true</useRepositoryLayout>
                            <copyPom>true</copyPom>
                            <outputDirectory>${project.build.directory}/repository</outputDirectory>
                            <includeArtifactIds>${artifactIds}</includeArtifactIds>
                            <skip>${build.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- tried to use plugin from spotify -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dockerfile>Dockerfile</dockerfile>
                    <repository>jahia/${image.repo}${image.repo.classifier}</repository>
                    <tag>${image.tag}</tag>
                    <buildArgs>
                        <PARENT_TAG>${parent.tag}</PARENT_TAG>
                        <IMAGE_REPO_CLASSIFIER>${image.repo.classifier}</IMAGE_REPO_CLASSIFIER>
                        <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                    </buildArgs>
                    <skip>${build.skip}</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
