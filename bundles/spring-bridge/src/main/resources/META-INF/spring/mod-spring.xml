<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
       xmlns:aop="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.eclipse.org/gemini/blueprint/schema/blueprint http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd">

    <osgi:service interface="org.jahia.services.usermanager.JahiaUserManagerService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="JahiaUserManagerService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.usermanager.JahiaGroupManagerService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="JahiaGroupManagerService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.sites.JahiaSitesService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="JahiaSitesService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.scheduler.SchedulerService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="SchedulerService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.content.JCRStoreService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="JCRStoreService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.content.JCRSessionFactory">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="jcrSessionFactory"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.content.JCRTemplate">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="jcrTemplate"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.content.nodetypes.NodeTypeRegistry">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="nodeTypeRegistry"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.content.JCRPublicationService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="jcrPublicationService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.importexport.ImportExportService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="ImportExportService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.templates.JahiaTemplateManagerService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="JahiaTemplateManagerService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.templates.TemplatePackageRegistry">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="org.jahia.services.templates.TemplatePackageRegistry"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.search.SearchService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="SearchService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.deamons.filewatcher.JahiaFileWatcherService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="JahiaFileWatcherService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.seo.jcr.VanityUrlService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="org.jahia.services.seo.jcr.VanityUrlService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.image.JahiaImageService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="imageService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.visibility.VisibilityService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="visibilityService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.modulemanager.ModuleManager">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="ModuleManager"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.mail.MailService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="MailService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.workflow.WorkflowService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="workflowService"/>
        </bean>
    </osgi:service>

    <osgi:service interface="org.jahia.services.render.RenderService">
        <bean class="org.jahia.bundles.spring.bridge.CoreContextSpringBeanProxy">
            <property name="target" ref="RenderService"/>
        </bean>
    </osgi:service>

    <osgi:list id="RenderFilterList" interface="org.jahia.services.render.filter.RenderFilter" availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="ErrorHandlerList" interface="org.jahia.bin.errors.ErrorHandler" availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="ActionList" interface="org.jahia.bin.Action" availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="ModuleChoiceListInitializerList"
               interface="org.jahia.services.content.nodetypes.initializers.ModuleChoiceListInitializer"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="ModuleChoiceListRendererList"
               interface="org.jahia.services.content.nodetypes.renderer.ModuleChoiceListRenderer"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="ModuleGlobalObjectList" interface="org.jahia.services.content.rules.ModuleGlobalObject"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="StaticAssetMappingList" interface="org.jahia.services.render.StaticAssetMapping"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="DefaultEventListenerList" interface="org.jahia.services.content.DefaultEventListener"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="BackgroundActionList" interface="org.jahia.services.content.rules.BackgroundAction"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="WorklowTypeRegistrationList" interface="org.jahia.services.workflow.WorklowTypeRegistration"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="VisibilityConditionRuleList" interface="org.jahia.services.visibility.VisibilityConditionRule"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="JCRNodeDecoratorDefinitionList"
               interface="org.jahia.services.content.decorator.JCRNodeDecoratorDefinition" availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="JCRNodeValidatorDefinitionList"
               interface="org.jahia.services.content.decorator.validation.JCRNodeValidatorDefinition"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="CacheKeyPartGeneratorList" interface="org.jahia.services.render.filter.cache.CacheKeyPartGenerator"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="HandlerMappingList" interface="org.springframework.web.servlet.HandlerMapping"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="ProviderFactoryList" interface="org.jahia.services.content.ProviderFactory" availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="AbstractServletFilterList" interface="org.jahia.bin.filters.AbstractServletFilter"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="SearchProviderList" interface="org.jahia.services.search.SearchProvider" availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="ModuleGWTResourcesList" interface="org.jahia.ajax.gwt.helper.ModuleGWTResources"
               availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

    <osgi:list id="PasswordDigesterList" interface="org.jahia.services.pwd.PasswordDigester" availability="optional">
        <osgi:listener ref="org.jahia.modules.default.ModuleRegistry" bind-method="osgiBind"
                       unbind-method="osgiUnbind"/>
    </osgi:list>

</beans>