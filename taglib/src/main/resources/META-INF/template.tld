<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
                            http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">
    <description>Provides a tag library with template specific tags</description>
    <display-name>Template Jahia Tag Library</display-name>
    <tlib-version>6.0</tlib-version>
    <short-name>template</short-name>
    <uri>http://www.jahia.org/tags/templateLib</uri>
    <tag>
        <description>
            This tag simply defines that the JSP file containing it should be considered as a
            Jahia template. It generates the XML doctype and starting &lt;html&gt; tag of the XHTML page that will be
            sent to the browser. It should be used together with the templateHead and templateBody tags, since all templates
            MUST have a head and a body
        </description>
        <name>template</name>
        <tag-class>org.jahia.taglibs.template.templatestructure.TemplateTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>
                Defines what DOCTYPE to use for the current pages created from this template. By default, pages are rendered
                using the XHTML TRANSITIONAL doctype. Legal values for this attribute are "xhtml-strict", "xhtml-transitional",
                "html-strict" or "html-transitional"
            </description>
            <name>doctype</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                Enables GWT for the guest (anonymous) user if the attribute value is 'true'. By default
                GWT is disabled for the guest user in order to not generate javascript code for non-loggued user
            </description>
            <name>gwtForGuest</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Defines what resource bundle file to use if the default template one is not suitable for this template.</description>
            <name>resourceBundle</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <example>
        &lt;template:template&gt;
            &lt;template:templateHead&gt;
               &lt;%@ include file="common/template-head.jspf" %&gt;
               &lt;utility:applicationResources/&gt;
           &lt;/template:templateHead&gt;
           &lt;template:templateBody&gt;
           &lt;/template:templateBody&gt;
         &lt;/template:template&gt;
        </example>
    </tag>
    <tag>
        <description>
            This tag simply delimits what is the head part of a Jahia template.
            It generates links to mandatory Jahia resources such as javascript or CSS files. All templates MUST have a head part.
            It should be used together with the template and templateBody tags.
        </description>
        <name>templateHead</name>
        <tag-class>org.jahia.taglibs.template.templatestructure.TemplateHeaderTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>Provide the title for the document. If not provided the title of the current page will be used</description>
            <name>title</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            This tag simply delimits what is the body part of a Jahia template.
            All templates MUST have a body part. It should be used together with the template and templateHead tags. The tag also
            implements the dynamic attributes interface allowing to specify whatever attribute should be passed to the HTML
            body tag of the generated page.
        </description>
        <name>templateBody</name>
        <tag-class>org.jahia.taglibs.template.templatestructure.TemplateBodyTag</tag-class>
        <body-content>JSP</body-content>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>
    <tag>
        <description>Generates a HTML meta tag to be placed in the head part of the template</description>
        <name>meta</name>
        <tag-class>org.jahia.taglibs.template.metadata.HTMLMetaTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>Sets the name of the meta tag</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>If the generated value should used a specific static value, this is the attribute to use in order to set it</description>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                If the generated value should reflect a Jahia metadata, this is the place where to give the name of the Jahia
                metadata we are interested in.
            </description>
            <name>metadata</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Set to true if you only want the value as a String and not the encapsulating HTML meta tag and its attributes</description>
            <name>valueOnly</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            Tag is used to add parameters to the parent tag, that implements ParamParent, e.g. 'include' or 'module' tags
        </description>
	    <name>param</name>
	    <tag-class>org.apache.taglibs.standard.tag.rt.core.ParamTag</tag-class>
	    <body-content>JSP</body-content>
	    <attribute>
	        <description>Name of the parameter.</description>
	        <name>name</name>
	        <required>true</required>
	        <rtexprvalue>true</rtexprvalue>
	    </attribute>
	    <attribute>
	        <description>Value of the parameter.</description>
	        <name>value</name>
	        <required>false</required>
	        <rtexprvalue>true</rtexprvalue>
	    </attribute>
    </tag>
    <tag>
      <description>
  Embed file from jahia repository
      </description>
      <name>fileImport</name>
        <tag-class>org.jahia.taglibs.template.include.FileIncludeTag</tag-class>
      <body-content>JSP</body-content>
      <attribute>
          <description>
  Path of the file in jahia repository
          </description>
          <name>path</name>
          <required>true</required>
          <rtexprvalue>true</rtexprvalue>
      </attribute>
      <attribute>
          <name>processHtml</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <type>boolean</type>
      </attribute>
    </tag>


    <tag>
        <description>Includes a node as a module into the page. The node to display is determined either by nodeName, contentBeanName, path or node attribute. Only one these attributes must be specified.
            templateType / template / forcedTemplate attributes determine the way the node is rendered.
        </description>
        <name>module</name>
        <tag-class>org.jahia.taglibs.template.include.ModuleTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>Node to include in the page</description>
            <name>node</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Name of the node attribute to be found in page context</description>
            <name>nodeName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Relative or absolute path to the node to include</description>
            <name>path</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The template type to use. By default, inherited from parent module, or HTML.</description>
            <name>templateType</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The default template used for displaying the node. Can be overriden with template of the node itself.</description>
            <name>template</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The template used for displaying the node. Overriden the template defined in the node itself.</description>
            <name>forcedTemplate</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The template wrapper</description>
            <name>templateWrapper</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Enable or disable edition of this module in edit mode. Mainly used for absolute or references.</description>
            <name>editable</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Space separated list of allowed node types. If the node does not match any node type, it won't be displayed. Edit mode will forbid drop of any incompatible node.</description>
            <name>nodeTypes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>If used with a relative path in path attribute, a node of the specified type wil be automatically created at this path. Has no effect if path is not specified or if path is absolute.</description>
            <name>autoCreateType</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Name of the exported pageContext variable to hold the value specified in the action.</description>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>
            Tag to use include another template.
        </description>
        <name>include</name>
        <tag-class>org.jahia.taglibs.template.include.IncludeTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>The template type to use. By default, inherited from parent module, or HTML.</description>
            <name>templateType</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The template used for displaying the node. Overriden the template defined in the node itself.</description>
            <name>template</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>



    <tag>
        <description>This tag will display a metadata value or you can get the value as a date object for formatting
            purpose.
        </description>
        <name>metadata</name>
        <tag-class>org.jahia.taglibs.template.metadata.MetadataTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>metadataName</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>contentBean</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.jahia.data.beans.ContentBean</type>
        </attribute>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>asDate</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Generate an html form which action is the current page url</description>
        <name>jahiaPageForm</name>
        <tag-class>org.jahia.taglibs.template.form.JahiaPageFormTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>method</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>


    <tag>
        <description>Retrieves a category from the backend and gives access to
            category child objects
        </description>
        <name>category</name>
        <tag-class>org.jahia.taglibs.template.category.CategoryTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>key</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>childCategoriesID</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>subTreeID</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>selectedCategoryKeyName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>Tag that allows to look up categories by property names and values.
            It is allowed to use "%" characters to do SQL pattern matching
            in the property name and value.
        </description>
        <name>categoriesByProperties</name>
        <tag-class>org.jahia.taglibs.template.category.CategoriesByPropertiesTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>propertyName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>propertyValue</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>propertyNameRef</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>propertyValueRef</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Retrieves the category keys of categories affected to a given content object.</description>
        <name>getContentObjectCategories</name>
        <tag-class>org.jahia.taglibs.template.category.GetContentObjectCategoriesTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>asSet</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>objectKey</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                The name of the page scope variable to expose the collection of CategoryBean instances.
            </description>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <!-- gwt -->
    <tag>
        <description>Generate place holder for a JahiaModule.</description>
        <name>gwtJahiaModule</name>
        <tag-class>org.jahia.taglibs.template.gwt.GWTJahiaModuleTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>jahiaType is one of : actionmenu,calendar,calendar,form,inlineediting,jobreport,layoutmanager,layoutmanager,
                layoutmanagerbox,mediaGallery,mySettings,opensearch,pdisplay,
                portletrender,query,rss,subscription,toolsbars,usergroup,versioncomparison</description>
            <name>jahiaType</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>cssClassName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>if false (default) use gxt-admin module, if true use gxt-template module</description>
            <name>templateUsage</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <dynamic-attributes>true</dynamic-attributes>
    </tag>
   

    <!-- layout manager -->
    <tag>
        <description>create html struture for layout manager.</description>
        <name>layoutManagerArea</name>
        <tag-class>org.jahia.taglibs.template.layoutmanager.LayoutManagerAreaTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>width</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>node</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>javax.jcr.Node</type>
        </attribute>
    </tag>
    
    <tag>
        <description>Helper tag that will only display if the specified user is the current user or if the property
        evaluates to a public (non-private)</description>
        <name>isPublic</name>
        <tag-class>org.jahia.taglibs.template.users.IsPublicTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>
                The userKey that we are want to evaluate the property for. Will be compared against the current
                request user.
            </description>
            <name>userKey</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                The name of the property that contains the boolean to evaluate for public display. Warning, the
                property that will be looked for is the value of this attribute "Public", so you must have a property
                declaration. If the property is found and it's value is true, then the body will be evaluated. If the
                property is NOT found, the body WILL be evaluated. So make sure you don't forget to declare the view
                property. Here is an example of an email property with public boolean :
                - j:email (string)
                - j:emailPublic (boolean)=true                
            </description>
            <name>property</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
                The invert attribute can be used to inserse the condition check, useful for an "else" behavior. The
                default is false.
            </description>
            <name>invert</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Includes an option as a module into the page. The nodetype of the option to render is defined by nodetype attribute.
            The node to display is determined by node attribute. template attribute determine the way the node is rendered.
        </description>
        <name>option</name>
        <tag-class>org.jahia.taglibs.template.include.OptionTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>Node to include in the page</description>
            <name>node</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Nodetype of the option to include in the page</description>
            <name>nodetype</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Name of the template used for the rendering</description>
            <name>template</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Add some resources to the head tag of the html.
        </description>
        <name>addResources</name>
        <tag-class>org.jahia.taglibs.template.include.AddResourcesTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>
            	Type of the resources (will define where to find (in css direcory for css, in javascript directory for javascript).
            	If the type is inlineCss or inlineJavascript the content of the tag body will be used as the asset itself and
            	the resources attribute can be left empty. 
            </description>
            <name>type</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>
            	The list of resources they will be included in the define order.
            	If the type is inlineCss or inlineJavascript the content of the tag body will be used as the asset itself and
            	the resources attribute can be left empty. 
           	</description>
            <name>resources</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
        	<description>If set to true the resource is inserted at the top of the resources list. Otherwise it is appended to the end. [false]</description>
        	<name>insert</name>
        	<required>false</required>
        	<rtexprvalue>true</rtexprvalue>
        	<type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>Add a wrapper.
        </description>
        <name>addWrapper</name>
        <tag-class>org.jahia.taglibs.template.include.AddWrapperTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>Name of the wrapper to include</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Init pager
        </description>
        <name>initPager</name>
        <tag-class>org.jahia.taglibs.template.pager.InitPagerTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>Number of elements per page</description>
            <name>pageSize</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Total number of elements</description>
            <name>totalSize</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>id of current pagination</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Remove pager properties from request</description>
        <name>removePager</name>
        <tag-class>org.jahia.taglibs.template.pager.RemovePagerTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>id of current pagination</description>
            <name>id</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <description>Define an area for containing sub modules.
        </description>
        <name>area</name>
        <tag-class>org.jahia.taglibs.template.include.AreaTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>Relative or absolute path to the node to include</description>
            <name>path</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The template type to use. By default, inherited from parent module, or HTML.</description>
            <name>templateType</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The default template used for displaying the node. Can be overriden with template of the node itself.</description>
            <name>template</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>The template used for displaying the node. Overriden the template defined in the node itself.</description>
            <name>forcedTemplate</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Enable or disable edition of this module in edit mode. Mainly used for absolute or references.</description>
            <name>editable</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Space separated list of allowed node types. If the node does not match any node type, it won't be displayed. Edit mode will forbid drop of any incompatible node.</description>
            <name>nodeTypes</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Content type .</description>
            <name>areaType</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Name of the exported pageContext variable to hold the value specified in the action.</description>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Force creation of the area even if not in edit mode</description>
            <name>forceCreation</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>

    <tag>
        <description>Define a linker area for linking to another module.
        </description>
        <name>linker</name>
        <tag-class>org.jahia.taglibs.template.include.LinkerTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>Relative or absolute path to the node to include</description>
            <name>path</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>Mixin type to enforced on target</description>
            <name>mixinType</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    
    <tag-file>
    	<description>
    		Includes external resources (CSS, JavaScript, inline CSS styles, inline JavaScript), which are required for current page
    		and were registered using addResources tag.
    	</description>
    	<name>includeResources</name>
    	<path>/META-INF/tags/includeResources.tag</path>
    </tag-file>
    <tag-file>
    	<description>
    		Display pagination after call to initPager tag.
    	</description>
    	<name>displayPagination</name>
    	<path>/META-INF/tags/displayPagination.tag</path>
    </tag-file>
</taglib>