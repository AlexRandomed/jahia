<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
                            http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">
    <description>Provides tags for manipulating JCR content</description>
    <display-name>Jahia JCR Tag Library</display-name>
    <tlib-version>6.0</tlib-version>
    <short-name>jcr</short-name>
    <uri>http://www.jahia.org/tags/jcr</uri>
    <tag>
        <description>Exposes the requested node type into the template scope.</description>
        <name>nodeType</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRNodeTypeTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Exposes a JCR node as a JCRNodeWrapper object</description>
        <name>node</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRNodeTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>the name of the exposed bean</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the path to the JCR node</description>
            <name>path</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the scope of the bean (see PageContext)</description>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Get a specific version of a node</description>
        <name>nodeVersion</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRNodeVersionTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>the name of the exposed bean</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the path to the JCR node</description>
            <name>node</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the scope of the bean (see PageContext)</description>
            <name>versionName</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the scope of the bean (see PageContext)</description>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
    <tag>
        <description>Displays a link to the given JCR node (surrounding tag behaving like a)</description>
        <name>link</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRNodeLinkTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>the path to the JCR node</description>
            <name>path</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>true to generate an absolute link</description>
            <name>absolute</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>Allow access to a property of a node</description>
        <name>nodeProperty</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRPropertyTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>The node on which you want to find the property</description>
            <name>node</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.jahia.services.content.JCRNodeWrapper</type>
        </attribute>
        <attribute>
            <description>The name of the property you want to find in the node</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The name of a variable for storage of javax.jcr.Value object associated with this property</description>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>inherited  (false is default) if true look up in parents properties</description>
            <name>inherited</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
    </tag>    
    <tag>
        <description>
            Exposes into the template scope the result (as the javax.jcr.query.QueryResult instance) of the JCR query
            based on the provided JCR_SQL2 expression.
            You can then access to javax.jcr.NodeIterator using var.nodes or to javax.jcr.query.RowIterator using var.rows.
            If no items match the query an empty result is exposed. This condition can be checked using nodes.size or rows.size method.
        </description>
        <name>sql</name>
        <tag-class>org.jahia.taglibs.jcr.query.JCRSQLTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>the name of the exposed bean will received a javax.jcr.query.QueryResult</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the SQL expression</description>
            <name>sql</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the scope of the bean (see PageContext)</description>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the maximum size of the result set, expressed in terms of the number of Rows</description>
            <name>limit</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>the start offset of the result set</description>
            <name>offset</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Long</type>
        </attribute>
    </tag>
    <tag>
        <description>
            Exposes into the template scope the result (as the javax.jcr.query.QueryResult instance) of the JCR query
            based on the provided XPath expression.
            You can then access to javax.jcr.NodeIterator using var.nodes or to javax.jcr.query.RowIterator using var.rows.
            If no items match the query an empty result is exposed. This condition can be checked using nodes.size or rows.size method.
        </description>
        <name>xpath</name>
        <tag-class>org.jahia.taglibs.jcr.query.JCRXPathTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>the name of the exposed bean will received a javax.jcr.query.QueryResult</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the XPath expression</description>
            <name>xpath</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the scope of the bean (see PageContext)</description>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <description>the maximum size of the result set, expressed in terms of the number of Rows</description>
            <name>limit</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>the start offset of the result set</description>
            <name>offset</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Long</type>
        </attribute>
    </tag>
    <tag>
        <description>
            Exposes into the template scope the result (as the javax.jcr.query.QueryResult instance) of the JCR query
            based on the provided Query Object Model, which is defined in the body via query tags.
            You can then access to javax.jcr.NodeIterator using var.nodes or to javax.jcr.query.RowIterator using var.rows.
            If no items match the query an empty result is exposed. This condition can be checked using nodes.size or rows.size method.
        </description>
        <name>jqom</name>
        <tag-class>org.jahia.taglibs.jcr.query.JQOMTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <description>
                Name of an existing QueryObjectModel bean in the request scope to be used for the query.
            </description>
            <name>qomBeanName</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>        
        <attribute>
            <description>the name of the scoped bean with the exposed javax.jcr.query.QueryResult</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>the scope of the bean with the QueryResult bean (see PageContext). Defaults to page scope.</description>
            <name>scope</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>the maximum size of the result set, expressed in terms of the number of Rows</description>
            <name>limit</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>the start offset of the result set</description>
            <name>offset</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Long</type>
        </attribute>
    </tag>
    <tag>
        <description>display a navigation menu</description>
        <name>navigationMenu</name>
        <tag-class>org.jahia.taglibs.uicomponents.navigation.JCRNavigationMenuTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>The node on which you want to find the property</description>
            <name>node</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.jahia.services.content.JCRNodeWrapper</type>
        </attribute>
        <attribute>
            <name>kind</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>startLevel</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
        </attribute>
        <attribute>
            <name>maxDepth</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
        </attribute>
        <attribute>
            <name>expandOnlyPageInPath</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onlyTop</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>        
    </tag>
        <tag>
        <description>display a navigation menu</description>
        <name>simpleNavigationMenu</name>
        <tag-class>org.jahia.taglibs.uicomponents.navigation.JCRSimpleNavigationTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
        </attribute>
        <attribute>
            <name>node</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <description>Allow access to a property of a node</description>
        <name>nodePropertyRenderer</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRPropertyCustomRendererTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>The node on which you want to find the property</description>
            <name>node</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.jahia.services.content.JCRNodeWrapper</type>
        </attribute>
        <attribute>
            <description>The name of the property you want to find in the node</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The name of a variable for storage of javax.jcr.Value object associated with this property</description>
            <name>var</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The name of renderer defined in ChoiceListRendererService in Spring</description>
            <name>renderer</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>Exposes a Preference JCR node as a JCRNodeWrapper object</description>
        <name>preference</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRPreferenceTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>the name of the exposed bean</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>the name of the preference</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>the default Value of the preference (if specified and preference does not exist it will create the preference)</description>
            <name>defaultValue</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>Allow access to initilaizers of a property of a node</description>
        <name>propertyInitializers</name>
        <tag-class>org.jahia.taglibs.jcr.node.JCRPropertyInitializerTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <description>The node on which you want to find the property</description>
            <name>node</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>org.jahia.services.content.JCRNodeWrapper</type>
        </attribute>
        <attribute>
            <description>The nodetype on which you want to find the property</description>
            <name>nodeType</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The name of the property you want to find in the node</description>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The name of a variable for storage of javax.jcr.Value object associated with this property</description>
            <name>var</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <function>
        <description>
            Get label value depending on the current local
        </description>
        <name>label</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>java.lang.String label(java.lang.Object)</function-signature>
    </function>
    <function>
        <description>
            Get label value depending on the specified local
        </description>
        <name>labelForLocale</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>java.lang.String label(java.lang.Object,java.lang.String)</function-signature>
    </function>
    <function>
        <description>
            Evaluates to true if the current node has the specified type or at least one of the specified node types (comma-separated).
        </description>
        <name>isNodeType</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>boolean isNodeType(org.jahia.services.content.JCRNodeWrapper,java.lang.String)</function-signature>

    </function>
    <function>
        <description>Returns the string name of the node property type</description>
        <name>propertyTypeName</name>
        <function-class>org.jahia.services.content.nodetypes.ExtendedPropertyType</function-class>
        <function-signature>java.lang.String nameFromValue(int)</function-signature>
		<example>
			${jcr:propertyTypeName(myProperty.type)}
		</example>
    </function>
    <function>
        <description>
        	Returns an iterator with the child nodes of the current node, which match
     		the specified node type name. This is an advanced version of the
     		getNodes(JCRNodeWrapper, String) method to handle multilpe node types.
     	</description>
        <name>getChildrenOfType</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>javax.jcr.NodeIterator getChildrenOfType(org.jahia.services.content.JCRNodeWrapper,java.lang.String)</function-signature>
        <example>
            ${jcr:getChildrenOfType(currentNode,'jnt:page,jnt:folder')}
        </example>
    </function>
    <function>
        <description>Returns childNodes of a certain type</description>
        <name>getNodes</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>javax.jcr.NodeIterator getNodes(org.jahia.services.content.JCRNodeWrapper,java.lang.String)</function-signature>
        <example>
            ${jcr:getNodes(currentNode,'jnt:page')}
        </example>
    </function>
    <function>
        <description>
        	Returns the first parent of the current node that has the specified node type.
        	If no matching node is found, null is returned.
		</description>
        <name>getParentOfType</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>org.jahia.services.content.JCRNodeWrapper getParentOfType(org.jahia.services.content.JCRNodeWrapper,java.lang.String)</function-signature>
        <example>
            ${jcr:getParentOfType(currentNode,'jnt:page')}
        </example>
    </function>
    <function>
        <description>Returns map of string key,string value using for key the node name of nodes of the type given as an
            argument found in the second argument node, and the value will be the matching property found in the first argument node</description>
        <name>getPropertiesAsStringFromNodeNameOfThatType</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>java.util.Map getPropertiesAsStringFromNodeNameOfThatType(org.jahia.services.content.JCRNodeWrapper,org.jahia.services.content.JCRNodeWrapper,java.lang.String)</function-signature>
        <example>
            ${jcr:getPropertiesAsStringFromNodeNameOfThatType(responseNode,currentNode,'jnt:formContent')}
        </example>
    </function>
    <function>
        <description>Returns map of string groupName,JahiaGroup value</description>
        <name>getUserMembership</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>java.util.Map getUserMembership(org.jahia.services.content.JCRNodeWrapper)</function-signature>
        <example>
            ${jcr:getUserMembership(currentNode)}
        </example>
    </function>
    <function>
        <description>Returns true if the current node has at least one child node of the specified type.</description>
        <name>hasChildrenOfType</name>
        <function-class>org.jahia.taglibs.jcr.node.JCRTagUtils</function-class>
        <function-signature>boolean hasChildrenOfType(org.jahia.services.content.JCRNodeWrapper,java.lang.String)</function-signature>
        <example>
            ${jcr:hasChildrenOfType(currentNode,'jnt:page,jnt:folder')}
        </example>
    </function>
</taglib>