<?xml version="1.0" encoding="UTF-8" ?>

<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
        version="2.0">

    <description>Jahia functions library</description>
    <display-name>Jahia functions</display-name>
    <tlib-version>6.5</tlib-version>
    <short-name>functions</short-name>
    <uri>http://www.jahia.org/tags/functions</uri>

	<function>
		<description>
			Abbreviates a String using ellipses. This will turn:
     		"Now is the time for all good men" into "Now is the time for..."
		</description>
		<name>abbreviate</name>
		<function-class>org.apache.commons.lang.StringUtils</function-class>
		<function-signature>java.lang.String abbreviate(java.lang.String, int)</function-signature>
		<example>
			${functions:abbreviate(field.value, 100)}
		</example>
	</function>
	
    <function>
        <description>Prints out the attribute values for a tag, based on the provided Map</description>
        <name>attributes</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.String attributes(java.util.Map)</function-signature>
        <example>
            &lt;input ${functions:attributes(tagAttributes)}/&gt;
        </example>
    </function>

    <function>
        <description>Checks if the target object can be found in the source. The source can be either a Collection, and array of objects or a String.</description>
        <name>contains</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>boolean contains(java.lang.Object,java.lang.Object)</function-signature>
        <example>
            &lt;input ${functions:contains('my original string', 'original')}/&gt;
            &lt;input ${functions:contains(myArray, testString)}/&gt;
        </example>
    </function>

    <function>
        <description>Returns the requested value if it is not empty, otherwise returns provided default value
        </description>
        <name>default</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Object defaultValue(java.lang.Object, java.lang.Object)</function-signature>
        <example>
            &lt;c:out value="${functions:default(param.itemsPerPage, '10')}"&gt;
        </example>
    </function>
    
    <function>
        <description>
            Escapes the characters in a String using JavaScript String rules.
            Escapes any values it finds into their JavaScript String form.
            Deals correctly with quotes and control-chars (tab, backslash, cr, ff, etc.)         
        </description>
        <name>escapeJavaScript</name>
        <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
        <function-signature>java.lang.String escapeJavaScript(java.lang.String)</function-signature>
        <example>
            &lt;c:set var="msg"&gt;He didn't say, "Stop!"&lt;/c:set&gt;
            ${functions:escapeJavaScript(msg) will result in: He didn\'t say, \"Stop!\"
        </example>
    </function>
    
    <function>
        <description>Returns the page ID of the page referenced by a URL key, or -1 if not found
        </description>
        <name>getPidFromUrlKey</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Integer getPidFromUrlKey(java.lang.String, java.lang.String)</function-signature>
        <example>
            &lt;c:out value="${functions:getPidFromUrlKey('myHomeKey', 'mySiteKey')}"&gt;
        </example>
    </function>

    <function>
        <description>Returns the given value cleaned of its HTML tags</description>
        <name>removeHtmlTags</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.String removeHtmlTags(java.lang.String)</function-signature>
        <example>
            &lt;c:out value="${functions:removeHtmlTagsTag('myHomeKey')}"&gt;
        </example>
    </function>

    <function>
        <description>Returns true if the specified user has a subscription entry for this specified content object.
        </description>
        <name>isSubscribed</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>boolean isSubscribed(java.lang.String, java.lang.String, java.lang.String, int)
        </function-signature>
        <example>
            &lt;c:if
            test="${functions:isSubscribed('ContentContainerList_19', 'contentPublished', ${jahia.requestInfo.currentUserName},
            ${jahia.site.id})}"&gt;
            The current user is subscribed to be notified on 'contentPublished' event for the container list
            &lt;/c:if&gt;
        </example>
    </function>

    <function>
        <description>Returns true if the specified user has NO subscription entry for this specified content object.
        </description>
        <name>isNotSubscribed</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>boolean isNotSubscribed(java.lang.String, java.lang.String, java.lang.String, int)
        </function-signature>
        <example>
            &lt;c:if
            test="${functions:isNotSubscribed('ContentContainerList_19', 'contentPublished', ${jahia.requestInfo.currentUserName},
            ${jahia.site.id})}"&gt;
            The current user is NOT subscribed to be notified on 'contentPublished' event for the container list
            &lt;/c:if&gt;
        </example>
    </function>

    <function>
        <description>Returns true if the current user is member of the specified group name or comma-separated list of
            group names
        </description>
        <name>memberOf</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Boolean memberOf(java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${functions:memberOf('administrators')}"&gt;
            The user belongs to administrators
            &lt;/c:if&gt;
        </example>
    </function>

    <function>
        <description>Returns true if the current user is NOT member of the specified group name or any of the specified
            groups
            (comma-separated list of group names)
        </description>
        <name>notMemberOf</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Boolean notMemberOf(java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${functions:notMemberOf('administrators,editors')}"&gt;
            The user belong neither to administrators nor to editors
            &lt;/c:if&gt;
        </example>
    </function>

    <function>
        <description>Appends 3 strings together and returns the concatenated value</description>
        <name>stringConcatenation</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.String stringConcatenation(java.lang.String, java.lang.String, java.lang.String)
        </function-signature>
        <example>
            &lt;c:out value="${functions:stringConcatenation('new', ' ', 'value')}"&gt;
        </example>
    </function>

    <function>
        <description>
            Unescapes any JavaScript literals found in the String.
        </description>
        <name>unescapeJavaScript</name>
        <function-class>org.apache.commons.lang.StringEscapeUtils</function-class>
        <function-signature>java.lang.String unescapeJavaScript(java.lang.String)</function-signature>
    </function>

    <function>
        <description>removes duplicate occurences in a string</description>
        <name>removeDuplicates</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.String removeDuplicates(java.lang.String, java.lang.String)
        </function-signature>
        <example>
            &lt;c:out value="${functions:removeDuplicates('aaa,bbb,ccc,ddd,eee,aaa', ',')}"&gt;
        </example>
    </function>

    <function>
        <description>counts occurences of a string in a string</description>
        <name>countOccurences</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>int countOccurences(java.lang.String, java.lang.String)
        </function-signature>
        <example>
            &lt;c:out value="${functions:countOccurences('aaa,bbb,ccc,ddd,eee,aaa', 'aaa')}"&gt;
        </example>
    </function>

    <function>
        <description>
        	Returns a pseudorandom, uniformly distributed int value between '0' (inclusive) 
        	and the specified value (exclusive), from the Math.random() sequence.
        </description>
        <name>randomInt</name>
        <function-class>org.apache.commons.lang.math.RandomUtils</function-class>
        <function-signature>int nextInt(int)</function-signature>
        <example>
            &lt;c:out value="${functions:randomInt(currentNode.nodes.size)}"&gt;
        </example>
    </function>

    <function>
        <description>
        	Returns the closest int to the argument. 
        	The result is rounded to an integer by adding 1/2, taking the 
     		floor of the result, and casting the result to type int.
        </description>
        <name>round</name>
        <function-class>java.lang.Math</function-class>
        <function-signature>int round(float)</function-signature>
        <example>
            &lt;c:out value="${functions:round(9 * tag.references.size / totalTagUsage)}"&gt;
        </example>
    </function>
    
    <function>
        <description>Returns the smaller of two long values.</description>
        <name>min</name>
        <function-class>java.lang.Math</function-class>
        <function-signature>long min(long, long)</function-signature>
        <example>
            &lt;c:out value="${functions:min(hitCount, 10)}"&gt;
        </example>
    </function>
    
    <function>
        <description>Returns the smaller of two long values.</description>
        <name>nextLongIdentifier</name>
        <function-class>org.apache.commons.id.IdentifierUtils</function-class>
        <function-signature>long nextLongIdentifier()</function-signature>
        <example>
            &lt;input type="text" name="date" id="date-${functions:nextLongIdentifier()}"/&gt;
        </example>
    </function>
    
    <function>
        <description>
			Checks if the current user is included in the specified logical role or
			has all specified roles if multiple are specified (comma-separated)
        </description>
        <name>isUserInRole</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Boolean isUserInRole(java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${functions:isUserInRole('user-manager')}"&gt;
            The user is authorized to manage users
            &lt;/c:if&gt;
        </example>
    </function>

    <function>
        <description>
			Checks if the current user is included in the specified logical site-level role 
			for the current site or has all specified roles if multiple are specified (comma-separated)
        </description>
        <name>isUserInRoleForSite</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Boolean isUserInRoleForSite(java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${functions:isUserInRoleForSite('actions/edit-mode')}"&gt;
            The user is authorized to perform actions in edit mode
            &lt;/c:if&gt;
        </example>
    </function>

    <function>
        <description>
			Checks if the current user has the specified permission or
     		has all specified permissions if multiple are specified (comma-separated)
        </description>
        <name>isUserPermitted</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Boolean isUserPermitted(java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${functions:isUserPermitted('global/password-policy')}"&gt;
            The user is authorized to manage password policies
            &lt;/c:if&gt;
        </example>
    </function>
    
    <function>
        <description>
			Checks if the current user has the specified site-level permission for current site or
     		has all specified permissions if multiple are specified (comma-separated)
        </description>
        <name>isUserPermittedForSite</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>java.lang.Boolean isUserPermittedForSite(java.lang.String)</function-signature>
        <example>
            &lt;c:if test="${functions:isUserPermitted('admin/site-languages')}"&gt;
            The user is authorized to manage languages for the current site
            &lt;/c:if&gt;
        </example>
    </function>

    <function>
        <description>
			Extends the standard JSTL's fn:length() function with JCR's RangeIterator support
        </description>
        <name>length</name>
        <function-class>org.jahia.taglibs.functions.Functions</function-class>
        <function-signature>long length(java.lang.Object)</function-signature>
        <example>
            Tag usage count: ${functions:length(tag.weakReferences)}
        </example>
    </function>
</taglib>