

switchTo.goToHomePage     = Switch to selected language and go to home page
pageTop                   = Page top
youAreHere                = You are here
queryResult               = Query result
question                  = Question
answer                    = Answer
postedOn                  = posted On
display                   = Display
itemsPerPage              = (Items / Page)
submit                    = Submit
page                      = Page
of                        = of

add = Add
delete = Delete
update = Update

editinword = Edit in Word
copy = Copy
paste = Paste
source = Source
restore = Restore content

#*************** Actions (start) ************
actionmenus.postfixes.navmenu.add = page
actionmenus.postfixes.navmenu.update = list properties
actionmenus.postfixes.navmenu.delete = page
actionmenus.postfixes.navmenu.copy = page
actionmenus.postfixes.navmenu.paste = page
actionmenus.postfixes.navmenu.restore = page
actionmenus.postfixes.navmenu.picked = page
actionmenus.postfixes.navmenu.picker = page
actionmenus.postfixes.navmenu.pickerlist = pages
actionmenus.postfixes.navmenu.source = page
actionmenus.postfixes.navmenu.default = page

actionmenus.postfixes.navlink.add = page
actionmenus.postfixes.navlink.update = page
actionmenus.postfixes.navlink.delete = page
actionmenus.postfixes.navlink.copy = page
actionmenus.postfixes.navlink.paste = page
actionmenus.postfixes.navlink.restore = page
actionmenus.postfixes.navlink.picked = page
actionmenus.postfixes.navlink.picker = page
actionmenus.postfixes.navlink.source = page
actionmenus.postfixes.navlink.default = page

actionmenus.iconlabels.boxes.add          = Add box
actionmenus.iconlabels.box.update         = Update box
actionmenus.postfixes.boxes.add           = box
actionmenus.postfixes.boxes.update        = Box list
actionmenus.postfixes.box.update          = box
actionmenus.postfixes.box.delete          = box
actionmenus.postfixes.box.copy            = box
actionmenus.postfixes.box.paste           = box

actionmenus.iconlabels.files.add          = Add file
actionmenus.iconlabels.file.update        = Update file
actionmenus.postfixes.files.add           = file
actionmenus.postfixes.files.update        = list settings
actionmenus.postfixes.file.update          = file
actionmenus.postfixes.file.delete          = file
actionmenus.postfixes.file.copy            = file
actionmenus.postfixes.file.paste           = file

actionmenus.iconlabels.lastnewss.add          = Add last news query
actionmenus.iconlabels.lastnews.update         = Update last news query
actionmenus.postfixes.lastnewss.add           = last news query
actionmenus.postfixes.lastnewss.update        = Last news list
actionmenus.postfixes.lastnews.update          = last news query
actionmenus.postfixes.lastnews.delete          = last news query
actionmenus.postfixes.lastnews.copy            = last news query
actionmenus.postfixes.lastnews.paste           = last news query

actionmenus.iconlabels.links.add          = Add link
actionmenus.iconlabels.link.update        = Update link
actionmenus.postfixes.links.add           = link
actionmenus.postfixes.links.update        = Link list
actionmenus.postfixes.link.update          = link
actionmenus.postfixes.link.delete          = link
actionmenus.postfixes.link.copy            = link
actionmenus.postfixes.link.paste           = link

actionmenus.iconlabels.mainContents.add          = Add description
actionmenus.iconlabels.mainContent.update        = Update description
actionmenus.postfixes.mainContents.add           = description
actionmenus.postfixes.mainContents.update        = Description list
actionmenus.postfixes.mainContent.update          = description
actionmenus.postfixes.mainContent.delete          = description
actionmenus.postfixes.mainContent.copy            = description
actionmenus.postfixes.mainContent.paste           = description

actionmenus.iconlabels.newss.add          = Add news
actionmenus.iconlabels.news.update        = Update news
actionmenus.postfixes.newss.add           = news
actionmenus.postfixes.newss.update        = News list
actionmenus.postfixes.news.update          = news
actionmenus.postfixes.news.delete          = news
actionmenus.postfixes.news.copy            = news
actionmenus.postfixes.news.paste           = news

actionmenus.iconlabels.pages.add          = Add page
actionmenus.iconlabels.page.update        = Update page
actionmenus.postfixes.pages.add           = page
actionmenus.postfixes.pages.update        = Page list
actionmenus.postfixes.page.update          = page
actionmenus.postfixes.page.delete          = page
actionmenus.postfixes.page.copy            = page
actionmenus.postfixes.page.paste           = page

actionmenus.iconlabels.webapps.add          = Add application
actionmenus.iconlabels.webapp.update        = Update application
actionmenus.postfixes.webapps.add           = application
actionmenus.postfixes.webapps.update        = Application list
actionmenus.postfixes.webapp.update          = application
actionmenus.postfixes.webapp.delete          = application
actionmenus.postfixes.webapp.copy            = application
actionmenus.postfixes.webapp.paste           = application

actionmenus.iconlabels.texts.add          = Add text
actionmenus.iconlabels.text.update        = Update text
actionmenus.postfixes.texts.add           = text
actionmenus.postfixes.texts.update        = text list
actionmenus.postfixes.text.update          = text
actionmenus.postfixes.text.delete          = text
actionmenus.postfixes.text.copy            = text
actionmenus.postfixes.text.paste           = text

actionmenus.iconlabels.userQueries.add          = Add user query
actionmenus.iconlabels.userQuery.update         = Update user query
actionmenus.postfixes.userQueries.add           = user query
actionmenus.postfixes.userQueries.update        = User query list
actionmenus.postfixes.userQuery.update          = user query
actionmenus.postfixes.userQuery.delete          = user query
actionmenus.postfixes.userQuery.copy            = user query
actionmenus.postfixes.userQuery.paste           = user query

actionmenus.iconlabels.groupQueries.add          = Add group query
actionmenus.iconlabels.groupQuery.update         = Update group query
actionmenus.postfixes.groupQueries.add           = group query
actionmenus.postfixes.groupQueries.update        = Group query list
actionmenus.postfixes.groupQuery.update          = group query
actionmenus.postfixes.groupQuery.delete          = group query
actionmenus.postfixes.groupQuery.copy            = group query
actionmenus.postfixes.groupQuery.paste           = group query

actionmenus.iconlabels.savedSearches.add          = Add saved search
actionmenus.iconlabels.savedSearch.update         = Update saved search
actionmenus.postfixes.savedSearches.add           = saved search
actionmenus.postfixes.savedSearches.update        = Saved search list
actionmenus.postfixes.savedSearch.update          = saved search
actionmenus.postfixes.savedSearch.delete          = saved search
actionmenus.postfixes.savedSearch.copy            = saved search
actionmenus.postfixes.savedSearch.paste           = saved search

actionmenus.iconlabels.footers.add          = Add footer
actionmenus.iconlabels.footer.update        = Update footer
actionmenus.postfixes.footers.add           = footer
actionmenus.postfixes.footers.update        = Footer list
actionmenus.postfixes.footer.update          = footer
actionmenus.postfixes.footer.delete          = footer
actionmenus.postfixes.footer.copy            = footer
actionmenus.postfixes.footer.paste           = footer

actionmenus.iconlabels.notes.add          = Add note
actionmenus.iconlabels.note.update        = Update note
actionmenus.postfixes.notes.add           = note
actionmenus.postfixes.notes.update        = Note list
actionmenus.postfixes.note.update          = note
actionmenus.postfixes.note.delete          = note
actionmenus.postfixes.note.copy            = note
actionmenus.postfixes.note.paste           = note

actionmenus.iconlabels.testContainers.add          = Add test container
actionmenus.iconlabels.testContainer.update        = Update test container
actionmenus.postfixes.testContainers.add           = test container
actionmenus.postfixes.testContainers.update        = test container list
actionmenus.postfixes.testContainer.update         = test container
actionmenus.postfixes.testContainer.delete         = test container
actionmenus.postfixes.testContainer.copy           = test container
actionmenus.postfixes.testContainer.paste          = test container

actionmenus.iconlabels.testSubContainers.add          = Add test 2nd level container
actionmenus.iconlabels.testSubContainer.update        = Update test 2nd level container
actionmenus.postfixes.testSubContainers.add           = test 2nd level container
actionmenus.postfixes.testSubContainers.update        = test 2nd level container list
actionmenus.postfixes.testSubContainer.update         = test 2nd level container
actionmenus.postfixes.testSubContainer.delete         = test 2nd level container
actionmenus.postfixes.testSubContainer.copy           = test 2nd level container
actionmenus.postfixes.testSubContainer.paste          = test 2nd level container

actionmenus.iconlabels.testSubSubContainers.add          = Add test 3rd level container
actionmenus.iconlabels.testSubSubContainer.update        = Update test 3rd level container
actionmenus.postfixes.testSubSubContainers.add           = test 3rd level container
actionmenus.postfixes.testSubSubContainers.update        = test 3rd level container list
actionmenus.postfixes.testSubSubContainer.update         = test 3rd level container
actionmenus.postfixes.testSubSubContainer.delete         = test 3rd level container
actionmenus.postfixes.testSubSubContainer.copy           = test 3rd level container
actionmenus.postfixes.testSubSubContainer.paste          = test 3rd level container

actionmenus.iconlabels.testSubSubSubContainers.add          = Add test 4th level container
actionmenus.iconlabels.testSubSubSubContainer.update        = Update test 4th level container
actionmenus.postfixes.testSubSubSubContainers.add           = test 4th level container
actionmenus.postfixes.testSubSubSubContainers.update        = test 4th level container list
actionmenus.postfixes.testSubSubSubContainer.update         = test 4th level container
actionmenus.postfixes.testSubSubSubContainer.delete         = test 4th level container
actionmenus.postfixes.testSubSubSubContainer.copy           = test 4th level container
actionmenus.postfixes.testSubSubSubContainer.paste          = test 4th level container

actionmenus.iconlabels.textContainers.add          = Add text container
actionmenus.iconlabels.textContainer.update        = Update text container
actionmenus.postfixes.textContainers.add           = text container
actionmenus.postfixes.textContainers.update        = text container list
actionmenus.postfixes.textContainer.update         = text container
actionmenus.postfixes.textContainer.delete         = text container
actionmenus.postfixes.textContainer.copy           = text container
actionmenus.postfixes.textContainer.paste          = text container

actionmenus.iconlabels.numberContainers.add          = Add number container
actionmenus.iconlabels.numberContainer.update        = Update number container
actionmenus.postfixes.numberContainers.add           = number container
actionmenus.postfixes.numberContainers.update        = number container list
actionmenus.postfixes.numberContainer.update         = number container
actionmenus.postfixes.numberContainer.delete         = number container
actionmenus.postfixes.numberContainer.copy           = number container
actionmenus.postfixes.numberContainer.paste          = number container

actionmenus.iconlabels.pageContainers.add          = Add page container
actionmenus.iconlabels.pageContainer.update        = Update page container
actionmenus.postfixes.pageContainers.add           = page container
actionmenus.postfixes.pageContainers.update        = page container list
actionmenus.postfixes.pageContainer.update         = page container
actionmenus.postfixes.pageContainer.delete         = page container
actionmenus.postfixes.pageContainer.copy           = page container
actionmenus.postfixes.pageContainer.paste          = page container

actionmenus.iconlabels.dateContainers.add          = Add date container
actionmenus.iconlabels.dateContainer.update        = Update date container
actionmenus.postfixes.dateContainers.add           = date container
actionmenus.postfixes.dateContainers.update        = date container list
actionmenus.postfixes.dateContainer.update         = date container
actionmenus.postfixes.dateContainer.delete         = date container
actionmenus.postfixes.dateContainer.copy           = date container
actionmenus.postfixes.dateContainer.paste          = date container

actionmenus.iconlabels.testSingleContainers.add          = Add single test container
actionmenus.iconlabels.testSingleContainer.update        = Update single test container
actionmenus.postfixes.testSingleContainers.add           = test single container
actionmenus.postfixes.testSingleContainers.update        = single test container list
actionmenus.postfixes.testSingleContainer.update         = single test container
actionmenus.postfixes.testSingleContainer.delete         = single test container
actionmenus.postfixes.testSingleContainer.copy           = single test container
actionmenus.postfixes.testSingleContainer.paste          = single test container

actionmenus.iconlabels.testMandatoryContainers.add          = Add mandatory test container
actionmenus.iconlabels.testMandatoryContainer.update        = Update mandatory test container
actionmenus.postfixes.testMandatoryContainers.add           = mandatory test container
actionmenus.postfixes.testMandatoryContainers.update        = mandatory test container list
actionmenus.postfixes.testMandatoryContainer.update         = mandatory test container
actionmenus.postfixes.testMandatoryContainer.delete         = mandatory test container
actionmenus.postfixes.testMandatoryContainer.copy           = mandatory test container
actionmenus.postfixes.testMandatoryContainer.paste          = mandatory test container

actionmenus.iconlabels.testSingleMandatoryContainers.add          = Add single mandatory test container
actionmenus.iconlabels.testSingleMandatoryContainer.update        = Update single mandatory test container
actionmenus.postfixes.testSingleMandatoryContainers.add           = single mandatory test container
actionmenus.postfixes.testSingleMandatoryContainers.update        = single mandatory test container list
actionmenus.postfixes.testSingleMandatoryContainer.update         = single mandatory test container
actionmenus.postfixes.testSingleMandatoryContainer.delete         = single mandatory test container
actionmenus.postfixes.testSingleMandatoryContainer.copy           = single mandatory test container
actionmenus.postfixes.testSingleMandatoryContainer.paste          = single mandatory test container

actionmenus.iconlabels.testSingleSubContainers.add          = Add single test sub container
actionmenus.iconlabels.testSingleSubContainer.update        = Update single test sub container
actionmenus.postfixes.testSingleSubContainers.add           = test single sub container
actionmenus.postfixes.testSingleSubContainers.update        = single test sub container list
actionmenus.postfixes.testSingleSubContainer.update         = single test sub container
actionmenus.postfixes.testSingleSubContainer.delete         = single test sub container
actionmenus.postfixes.testSingleSubContainer.copy           = single test sub container
actionmenus.postfixes.testSingleSubContainer.paste          = single test sub container

actionmenus.iconlabels.testMandatorySubContainers.add          = Add mandatory test sub container
actionmenus.iconlabels.testMandatorySubContainer.update        = Update mandatory test sub container
actionmenus.postfixes.testMandatorySubContainers.add           = mandatory test sub container
actionmenus.postfixes.testMandatorySubContainers.update        = mandatory test sub container list
actionmenus.postfixes.testMandatorySubContainer.update         = mandatory test sub container
actionmenus.postfixes.testMandatorySubContainer.delete         = mandatory test sub container
actionmenus.postfixes.testMandatorySubContainer.copy           = mandatory test sub container
actionmenus.postfixes.testMandatorySubContainer.paste          = mandatory test sub container

actionmenus.iconlabels.testSingleMandatorySubContainers.add          = Add single mandatory test sub container
actionmenus.iconlabels.testSingleMandatorySubContainer.update        = Update single mandatory test sub container
actionmenus.postfixes.testSingleMandatorySubContainers.add           = single mandatory test sub container
actionmenus.postfixes.testSingleMandatorySubContainers.update        = single mandatory test sub container list
actionmenus.postfixes.testSingleMandatorySubContainer.update         = single mandatory test sub container
actionmenus.postfixes.testSingleMandatorySubContainer.delete         = single mandatory test sub container
actionmenus.postfixes.testSingleMandatorySubContainer.copy           = single mandatory test sub container
actionmenus.postfixes.testSingleMandatorySubContainer.paste          = single mandatory test sub container

actionmenus.iconlabels.testSingleSubSubContainers.add          = Add single test sub sub container
actionmenus.iconlabels.testSingleSubSubContainer.update        = Update single test sub sub container
actionmenus.postfixes.testSingleSubSubContainers.add           = test single sub sub container
actionmenus.postfixes.testSingleSubSubContainers.update        = single test sub sub container list
actionmenus.postfixes.testSingleSubSubContainer.update         = single test sub sub container
actionmenus.postfixes.testSingleSubSubContainer.delete         = single test sub sub container
actionmenus.postfixes.testSingleSubSubContainer.copy           = single test sub sub container
actionmenus.postfixes.testSingleSubSubContainer.paste          = single test sub sub container

actionmenus.iconlabels.testMandatorySubSubContainers.add          = Add mandatory test sub sub container
actionmenus.iconlabels.testMandatorySubSubContainer.update        = Update mandatory test sub sub container
actionmenus.postfixes.testMandatorySubSubContainers.add           = mandatory test sub sub container
actionmenus.postfixes.testMandatorySubSubContainers.update        = mandatory test sub sub container list
actionmenus.postfixes.testMandatorySubSubContainer.update         = mandatory test sub sub container
actionmenus.postfixes.testMandatorySubSubContainer.delete         = mandatory test sub sub container
actionmenus.postfixes.testMandatorySubSubContainer.copy           = mandatory test sub sub container
actionmenus.postfixes.testMandatorySubSubContainer.paste          = mandatory test sub sub container

actionmenus.iconlabels.testSingleMandatorySubSubContainers.add          = Add single mandatory test sub sub container
actionmenus.iconlabels.testSingleMandatorySubSubContainer.update        = Update single mandatory test sub sub container
actionmenus.postfixes.testSingleMandatorySubSubContainers.add           = single mandatory test sub sub container
actionmenus.postfixes.testSingleMandatorySubSubContainers.update        = single mandatory test sub sub container list
actionmenus.postfixes.testSingleMandatorySubSubContainer.update         = single mandatory test sub sub container
actionmenus.postfixes.testSingleMandatorySubSubContainer.delete         = single mandatory test sub sub container
actionmenus.postfixes.testSingleMandatorySubSubContainer.copy           = single mandatory test sub sub container
actionmenus.postfixes.testSingleMandatorySubSubContainer.paste          = single mandatory test sub sub container

#*************** Action (end) **************

#**************** Note ******************

core_templates_note = List of notes
core_templates_note.noteTitle = Title
core_templates_note.noteBody = Body

#**************** Login ******************

loginstandard = Login Standard
loginpopup = Login with Popup:

#**************** Generic Container field display ******************

containerListLevel = Container list (level {0})
test_templates_allFields.smallText = Small Text
test_templates_allFields.sharedSmallText = Shared Small Text
test_templates_allFields.sharedSmallTextSingle = Shared Small Text Single
test_templates_allFields.sharedSmallTextMultiple = Shared Small Text Multiple
test_templates_allFields.bigText = Big Text
test_templates_allFields.integer = Integer
test_templates_allFields.float = Float
test_templates_allFields.boolean = Boolean
test_templates_allFields.color = Color
test_templates_allFields.date = Date
test_templates_allFields.page = Page
test_templates_allFields.file = File
test_templates_allFields.application = Application
test_templates_allFields.category = Category
test_templates_allFieldsTwice.smallText2nd = Second Small Text
test_templates_allFieldsTwice.sharedSmallText2nd = Second Shared Small Text
test_templates_allFieldsTwice.sharedSmallTextSingle2nd = Second Shared Small Text Single
test_templates_allFieldsTwice.sharedSmallTextMultiple2nd = Second Shared Small Text Multiple
test_templates_allFieldsTwice.bigText2nd = Second Big Text
test_templates_allFieldsTwice.integer2nd = Second Integer
test_templates_allFieldsTwice.float2nd = Second Float
test_templates_allFieldsTwice.boolean2nd = Second Boolean
test_templates_allFieldsTwice.color2nd = Second Color
test_templates_allFieldsTwice.date2nd = Second Date
test_templates_allFieldsTwice.page2nd = Second Page
test_templates_allFieldsTwice.file2nd = Second File
test_templates_allFieldsTwice.application2nd = Second Application
test_templates_allFields.category2nd = Second Category

test_templates_textFields.smallText = Small text
test_templates_textFields.smallTextWithDefault = Small text with hardcoded default value (='default value')
test_templates_textFields.smallTextWithDefaultAsResource = Small text with default value in resource bundle (='Default value in resource bundle')
test_templates_textFields.smallTextWithDefaultAsResource.defaultValue = Default value in resource bundle
test_templates_textFields.smallTextWithDefaultAsFunction = Small text with default value as dynamic function (=current username + current time)
test_templates_textFields.smallTextWithDefaultAsFunctionReadOnly = Read only small text with default value as dynamic function (=current username + current time)
test_templates_textFields.smallTextWithDefaultAsExpression = Small text with default value as expression (current username)
test_templates_textFields.mandatorySmallText = Small text, mandatory
test_templates_textFields.alphanumericSmallText = Small text, alphanumeric
test_templates_textFields.smallTextMultiLang = Small text, multi language
test_templates_textFields.smallTextMultiLangWithDefaultAsExpression = Small text, multi language, with default value as expression (current username)
test_templates_textFields.smallTextMultiline = Small text (multiline)
test_templates_textFields.smallTextMultilineWithDefault = Small text (multiline) with hardcoded default (='multiline default value')
test_templates_textFields.smallTextMultilineMultiLang = Small text (multilanguage, multiline)
test_templates_textFields.smallTextMultilineMultiLangWithDefault = Small text (multilanguage, multiline) with default from resource bundle (='Default value')
test_templates_textFields.smallTextMultilineMultiLangWithDefault.defaultValue = Default value
test_templates_textFields.richText = Big text
test_templates_textFields.dropDown = Drop down (default is option2)
test_templates_textFields.dropDown.resourceOption1 = Option 1 in resource bundle
test_templates_textFields.dropDown.resourceOption2 = Option 2 in resource bundle
test_templates_textFields.selectBox = Choice list, multiple (default are option1 and option2)
test_templates_textFields.selectBox.resourceOption1 = Option 1 in resource bundle
test_templates_textFields.selectBox.resourceOption2 = Option 2 in resource bundle
test_templates_textFields.dropDownMultiLang = Drop down multilanguage (default is 'Option 2 in resource bundle')
test_templates_textFields.dropDownMultiLang.resourceOption1 = Option 1 in resource bundle
test_templates_textFields.dropDownMultiLang.resourceOption2 = Option 2 in resource bundle
test_templates_textFields.selectBoxMultiLang = Choice list, multiple multilanguage (default are 'option1' and 'Option 2 in resource bundle')
test_templates_textFields.selectBoxMultiLang.resourceOption1 = Option 1 in resource bundle
test_templates_textFields.selectBoxMultiLang.resourceOption2 = Option 2 in resource bundle
test_templates_textFields.dropDownSorted = Drop down sorted (default is option2)
test_templates_textFields.dropDownSorted.resourceOption1 = Option 1 in resource bundle
test_templates_textFields.dropDownSorted.resourceOption2 = Option 2 in resource bundle
test_templates_textFields.selectBoxSorted = Choice list, multiple sorted (default are 'Option 1 in resource bundle' and option2)
test_templates_textFields.selectBoxSorted.resourceOption1 = Option 1 in resource bundle
test_templates_textFields.selectBoxSorted.resourceOption2 = Option 2 in resource bundle
test_templates_textFields.selectBoxWithExpressions = Choice list, multiple sorted, with values from expressions (currentPage.path[0].title, currentPage.path[1].title, currentSite.homePage.containerLists["navLink"].containers[0].fields["pageTitle"].object.title)
test_templates_textFields.category = Category
test_templates_textFields.categoryWithDefault = Category (default set for "cat1" and "cat2")
test_templates_textFields.categoryWithRoot = Category (root as "cat1")
test_templates_textFields.color = Color field
test_templates_textFields.colorWithBlueDefault = Color field (blue is default)
test_templates_textFields.booleanWithDefault = Boolean field (true is default)
test_templates_textFields.booleanWithDefaultAsExpression = Boolean field with default value as expression (is current request triggered from Windows OS?)


test_templates_numberFields.long = Long
test_templates_numberFields.longWithDefault = Long with default value (=10)
test_templates_numberFields.longWithDefaultAsResource = Long with default value in resource bundle (=15)
test_templates_numberFields.longWithDefaultAsResource.defaultValue = 15
test_templates_numberFields.longWithDefaultAsExpression = Long with default value as expression (currentPage.ID)
test_templates_numberFields.longBetween1and10 = Long between 1 and 10
test_templates_numberFields.longDropdown = Long with dropdown selector (default is 3)
test_templates_numberFields.double = Double
test_templates_numberFields.doubleWithDefault = Double with default value (=0.1)
test_templates_numberFields.doubleWithDefaultAsResource = Double with default value in resource bundle (=33.33)
test_templates_numberFields.doubleWithDefaultAsResource.defaultValue = 33.33
test_templates_numberFields.doubleWithDefaultAsExpression = Double with default value as expression (currentSite.id * 10 + 2.5)
test_templates_numberFields.doubleBetween1and10 = Double between 1 and 10
test_templates_numberFields.doubleDropdown = Double with dropdown selector (default is 2.5)

test_templates_pageFields.page = Page field
test_templates_pageFields.pageLinkOnly = Page field / Link only
test_templates_pageFields.pagePageOnly = Page field / Page only
test_templates_pageFields.pageSimplePageOnly = Page field / Simple page only
test_templates_pageFields.pageInternal = Page field / Internal
test_templates_pageFields.pageLinkInternal = Page field / Internal link
test_templates_pageFields.pageLinkExternal = Page field / External link
test_templates_pageFields.pageLinkSimple = Page field / Internal link to Simple
test_templates_pageFields.pageNewPageInternalOrLinkExternal = Page field / New page or external link

test_templates_dateFields.date = Date field
test_templates_dateFields.dateWithDefault = Date field with default value (1/1/2008 13:12)
test_templates_dateFields.dateWithDefaultAsNow   = Date field with default as now
test_templates_dateFields.dateWithDefaultAsExpression = Date field with default as expression (currentRequest.paramBean.cacheExpirationDate)
test_templates_dateFields.formattedDate   = Date field with different format (YYYYMMdd)
test_templates_dateFields.timeWithDefaultAsNow = Time field with default as now (HH:mm:ss,SSS)
test_templates_dateFields.hourWithDefaultAsNow = Hour with default as now (with using hardcoded string in constant = hh o'clock a, zzzz) 
test_templates_dateFields.tommorrowSameTime = Tomorrow same time with format='yyyyy.MMMMM.dd GGG hh:mm aaa'
test_templates_dateFields.maximumDate = Maximum date (31.12.9999 23:59)

product.Smalltext = Smalltext Product from resource bundle
product.Bigtext = <b>Bigtext</b> Product from resource bundle
product.Integer = 50
product.Float = 50.50

location.001 = Geneva / Switzerland
location.002 = Paris / France
location.003 = Washington / USA
location.004 = Klagenfurt / Austria

rss = RSS
boxContainer.rssContainer = RSS feeds
boxContainer.rssContainer.title = RSS title
boxContainer.rssContainer.url = RSS URL
add.rsss = Add a RSS feed
update.rsss = Settings
update.rss = Update RSS feed
delete.rss = Delete RSS feed

boxContainer.filesContainer = Files
boxContainer.filesContainer.file = File
boxContainer.filesContainer.description = Description
boxContainer.filesContainer.displayDetails = Display details
add.filesContainers = Add a file
update.filesContainers = Settings
update.filesContainer = Update file
delete.filesContainer = Delete file

label.allFieldsContainerLocationSelection = "All fields" container location selection
label.navLinkContainerLocationSelection = "Navigation link" container location selection


label.category = Category
label.container = Container (#{0})
label.container.name = Container name
label.containerList.size = Container list size
label.containerList.size.alt = Container list size (alternative access)
label.currentPage.id = Current page ID
label.currentPage.languageStates = Current page language states
label.dynamicComparison = Dynamic comparisons
label.expected.result = Expected result
label.firstContainer.id = First container ID
label.firstContainer.title = First container title
label.fixedComparison = Fixed comparisons
label.fullTextSearch = Full Text Search
label.fullTextSearchTerm = Search Term
label.homepage.id = Homepage ID
label.homepage.title = Homepage title
label.language = Language
label.localeSensitiveSorting = Locale sensitive sorting
label.maxHits = Maximum hits count
label.metadata = Metadata
label.metadata.author = Author
label.metadata.category = Category
label.metadata.createdDate = Created
label.metadata.lastEditor = Last editor
label.metadata.modifiedDate = Modified
label.onPage = On page
label.onPageAndSubpages = On page and subpages
label.onSite = On site
label.pageId = Page ID
label.pageKey = Page URL Key
label.pageLevel = Page level
label.pageLevel.description = 1 for homepage, 2 for second page in path, 3...
label.please.select = Please make a selection
label.propertyName = Property name
label.query.equalTo = is equal to
label.query.greaterThan = is greater than
label.query.greaterThanOrEqualTo = is greater or equal to
label.query.lessThan = is less than
label.query.lessThanOrEqualTo = is less or equal to
label.query.like = is like
label.query.notEqualTo = is not equal to
label.queryOn = Query on
label.querySettings = Query settings
label.relativePageLevel = Relative page level
label.relativePageLevel.description = 1 for parent page, 2 for grandparent page, 3...
label.resultsFor = Results for: {0}={1}
label.searchFilter.database = database
label.searchFilter.lucene = Lucene index
label.searchFilter.automatic = automatic selection
label.siteKey = Site Key
label.sortByProperty = Sort by property
label.sortOrder = Sort order
label.sortOrder.ascending = ascending
label.sortOrder.descending = descending
label.template.descriptions = The test unit templates are used to test different Jahia features and in connection with the Template Development Guide to demonstrate how these features work. Currently the following templates are available:
label.title = Title
label.useBackendCache = Use Lucene filter cache

noCategories = There are no categories

#**************** Template display names ******************
template.name.allFields = [WCM > Content definition] All fields (cont & subcont)
template.name.allFieldsTwice = [WCM > Content definition] All fields twice (cont & subcont)
template.name.allSelectors = [WCM > Content definition] All selectors
template.name.mixinTypes = [WCM > Content definition] Mixin types
template.name.boxtags = [WCM > Content taglibs] Box Tags
template.name.containerTypes = [WCM > Content definition] Container types (cont & subcont)
template.name.customIndexOptions = [Search > Content definition] Custom index options
template.name.dateutil = [WCM > Content taglibs] Date Utils
template.name.display = [WCM > Content taglibs] Displaytags
template.name.errors = [WCM > Template management] Errors
template.name.formhandler = [WCM > Content taglibs] Form Handler
template.name.inherit = [WCM > Template management] Inherit includes
template.name.login = [WCM > Security] Login Template
template.name.languageSwitching = [WCM > Internationalization] Language switching
template.name.multilingualSearch = [Search > Internationalization] Multilingual Search
template.name.openSearch = [Search] Open search
template.name.pickers = [WCM > UI components] Picker controls
template.name.searchAllOptions = [Search] Search all options
template.name.searchBasic = [Search] Search basic
template.name.searchDefault = [Search] Search default results page
template.name.searchDocuments = [Search] Search documents
template.name.searchExample = [Search] Search static example
template.name.testUnitHome = Test units home page
template.name.usingBoxes = [WCM > Content definition] Using Boxes (inheritance)
template.name.validation = [WCM > Content definition] Validation
template.name.extensions = [WCM > Content definition] Extensions
template.name.containerAddressing = [WCM > Content taglibs] Absolute/relative container addressing
template.name.contentExpressions = [WCM > Content taglibs] Access content with expression language
template.name.queryTags = [WCM > Content taglibs] Container query tags
template.name.cache = [Cache] Cache Examples
template.name.cachetag = [Cache] Cache Tag Examples
template.name.rules = [WCM > Template management] Rules
template.name.form = [WCM > Content definition] Form
template.name.subscriptions = [WCM > Subscriptions] Subscriptions
template.name.jcr.tags = [DMS > Taglibs] JCR tags

template.name.double = Double
template.name.faq = FAQ
template.name.full = Full
template.name.home = Home page
template.name.layoutManager = Layout Manager
template.name.news = News
template.name.simple = Simple

#**************** Template descriptions ******************
description.template.allFields = This template defines a standard container list with a container in which there is one field of each basic Jahia data type. The container list also defines sub container lists (to the 4th level) each holding containers with all fields.
description.template.allFields.expectedResult = It should be possible to create and display fields of the types:  SmallText (multilingual), SharedSmallText (not multilingual), SharedSmallText (single choice),  SharedSmallText (multiple choice), BigText (multilingiual), Integer (mulitilingual), Float (multilingual), Boolean (multilingual), Color (multilingual), Date, Page, File, Application, Category.<br/>You should be able to create subcontainers with the same fields down to the 4th level.<br/>The bigtext field demonstrates the possibility to limit the output to 40 characters (and '...') or 5 words (and 'etc.')
description.template.allFieldsTwice = This template defines a standard container list with a container in which there are two fields of each basic Jahia data type. The container list also defines sub container lists (to the 4th level) each holding containers with all fields twice.
description.template.allFieldsTwice.expectedResult = It should be possible to create and display two instances of fields of the types:  SmallText (multilingual), SharedSmallText (not multilingual), SharedSmallText (single choice),  SharedSmallText (multiple choice), BigText (multilingiual), Integer (mulitilingual), Float (multilingual), Boolean (multilingual), Color (multilingual), Date, Page, File, Application, Category.<br/>You should be able to create subcontainers with the same fields down to the 4th level.
description.template.allSelectors = This template defines different container lists for separate containers holding text fields, date fields, number fields and page fields with different definitions (default values and options). Furthermore it demonstrates to main containers with different workflow types.
description.template.allSelectors.expectedResult = It should be possible to create and display container instances of different fields groups: text, date, numeric and page fields. From the field titles it should be clear what is expected by definition. <br/>Multiple containers can be created but all just in the first level.<br/>The last two containers are description containers, where the first has NO workflow on default and the second has a 3 step N-step workflow.     
description.template.mixinTypes = This template defines different container lists with the same type (all fields) with different combination of mixin types
description.template.mixinTypes.expectedResult = First container list contains only fields from the "all fields" type, second and third list have an additional mixin type with one additional field (text and date), last list has both mixin type with both additional fields.     
description.template.boxtags = This template shows different ways to use box-list and box tag (shows boxes from other pages)
description.template.containerTypes = This template defines a container list of type SINGLE, a container list of type MANDATORY and a container list of type SINGLE MANDATORY. The first container list again defines subcontainer lists with all these types and again the first subcontainer defines lists of all three types.
description.template.containerTypes.expectedResult = For MANDATORY container lists there must always be at least one container in the list (even on initialization or when the last container is deleted). <br/> For SINGLE container lists it should not be possible to add more than one container to the list.<br/>This should work on all levels the same.
description.template.customIndexOptions = This template defines a container list with fields, which have different indexation options in the definition.
description.template.customIndexOptions.expectedResult = It should be possible to create and display container instances of a container, which has fields with different indexation options. These options have influence on the searchability on the fields.<br/> untokenizedDate (indexed='untok' scoreboost=1 analyzer='keyword'), scoreboostedDate (indexed='untok' scoreboost=6 analyzer='keyword'), untokenizedLong (indexed='untok' analyzer='keyword'), simpleSmallText (analyzer='simple'), nonIndexedSmallText (indexed='no')
description.template.dateutil = This template demonstrates different possibilities to format and calculate special dates.
description.template.display = This template demonstrates the use of the display* tags.
description.template.errors = This template demonstrates the triggering of requests, which result in an error, where custom error displays can be configured.
description.template.errors.expectedResult =  This template demonstrates the triggering of requests, which result in an error, where custom error displays can be configured. The heading of each test explains the expected result.
description.template.formhandler = This template demonstrates the use of FormContentHandler Tag. 
description.template.inherit = This template shows the different usage of include tag (without params, with params) and the execute-super tag.
description.template.languageSwitching = This template demonstrates several possibilities of using the language switching tag.
description.template.languageSwitching.expectedResult = This template demonstrates several possibilities of using the language switching tag. The heading of each test explains the expected result.
description.template.login = This template shows different login forms and different login ways (popup)
description.template.multilingualSearch = This template demonstrates a multilingual search in a list of language codes by using the query tags.
description.template.multilingualSearch.expectedResult = Letting the checkbox unchecked the search is only done in the current language. Checking the checkbox will search in the languages Italian, English, German and French if content for these languages is existing.
description.template.pickers = This template demonstrates the usage of the reusable picker controls for picking a page, file, date,...
description.template.pickers.expectedResult =  This template demonstrates the usage of the reusable picker controls for picking a page, file, date,... The heading of each test and the field names explain the expected result.
description.template.searchAllOptions = A search template showing all possible search options.
description.template.searchBasic = A search template with just the basic search options.
description.template.searchDefault = A search template to show the default search results page.
description.template.searchDocuments = A search template for searching in the file repository (not in Jahia content).
description.template.searchExample = A search template with a custom search example.
description.template.usingBoxes = This template demonstrates the new box taglibs, with which you can add boxes from the core templates as well as additional test template boxes.
description.template.usingBoxes.expectedResult = You should be able to add boxes of the same types as in the Core templates. In addition there is a RSS-box, which is only part of the test unit templates and should also be part of the box types list.
description.template.validation = Shows the built-in validation, defined internally in the field definitions (definitions.cnd) as well as the Struts Validator functionality by defining validations in the *-validation.xml file.
description.template.extensions = Demonstrates the usage of the jmix:subscribable, jmix:commentable and jmix:rssable type of the containers to allow end users subscribe to the content modifications, post comments and use RSS feeds 
description.template.containerAddressing = This template demonstrates retrieving containers from lists on other pages via absolute or relative (=in pagepath) addressing.
description.template.containerAddressing.expectedResult = Type a valid addressing, when pressing the {0} button, all containers and its fields should be displayed. For relative addressing you need to create this page below pages based on the '{1}' template. If you edit more than one input field, only the first (uppermost) filled field will be considered.<br/>'Relative page level' uses the relativeContaienrList tag, the other options use absoluteContainerList.
description.template.contentExpressions = This template demonstrates retrieving content with the JSP expression language.  
description.template.contentExpressions.expectedResult = This template displays some information with using the expression language. The accessed container list is the description list, where we are displaying the titles with expression language. 
description.template.queryTags = This template demonstrates how queries can be done using the container query tags.
description.template.queryTags.expectedResult = Select different options and press the {0} button to display the containers matching the query.
description.template.cache = This template will show several examples of caching.
description.template.cachetag = This template will show several examples of caching with cache tag.
description.template.openSearch = With this template you can test Jahia's OpenSeach API integration.
description.template.rules = This template will show several examples of rules usage.
description.template.form = This template demonstrate cnd based form generation
description.template.subscriptions = Shows the usage of the Subscriptions API for simple subscription management and firing of a test event. 
description.template.jcr.tags = Shows the usage of JCR tag library for accessing and displaying repository content in a template.

#***** calculate Date Template (Date Util) ******
dateutil.calculateDates = Calculate different Dates
dateutil.now = Now
dateutil.week = In one week
dateutil.month = In one month
dateutil.year = In one year
dateutil.lastyear = Last year
dateutil.yearhours = One year and twelve hours
dateutil.complex = two years, one day, one month, twelve hours, thirty minutes, thirty seconds

#***** Box Tags Template ******
boxtags.display = Display columnB_box Boxes
boxtags.pagelevel = Display columnB_box Boxes (pageLevel=2)
boxtags.errorfull = Display Boxes Error FULL
boxtags.errorhide = Display Boxes Error Hide (same list as above)
boxtags.errorcompact = Display Boxes Error COMPACT (same list as above)

#***** Inherit Template *****
inherit.include = Inlcude simple other workarea from other template (commentable news from coretemplate)
inherit.withparam = Inlcude Box jsp from coretemplate, with param: name
inherit.execute = Execute an super JSP if one available

#***** Display Tags *****
display.image = DisplayImageTag
display.imagelink = DisplayImageLink
display.file = DisplayFile
display.filedetails = DisplayFileDetails
display.link = DisplayLink
display.randomimage = Display Random Image

#***** Form Hanlder *****
display.name = Name
display.adress = Adress
display.zip = Zip
display.city = City
display.store = Save Contact
