Integration of auto-completion in templates.

 This document explains how to integrate auto-completion in templates, in order to help users populate text fields,
 avoid typos, making input faster and help seach scenarios.

 Auto-completion uses the JQuery auto-completion plugin and integrates it with Jahia's Find REST servlet, to perform
 queries and format the results so that the user can select a value. As you will see the query can be quite simple or
 quite complex.

 * Tag auto-completion example

---------------------------------------
<template:addResources type="css" resources="jquery.autocomplete.css" />
<template:addResources type="css" resources="thickbox.css" />
<template:addResources type="javascript" resources="jquery.ajaxQueue.js" />
<template:addResources type="javascript" resources="jquery.autocomplete.js" />
<template:addResources type="javascript" resources="jquery.bgiframe.min.js" />
<template:addResources type="javascript" resources="thickbox-compressed.js" />
...
    $(document).ready(function() {

        function getText(node) {
            return node["j:nodename"];
        }

        function format(result) {
            return getText(result["node"]);
        }

        $(".newTagInput").autocomplete("${url.find}", {
            dataType: "json",
            cacheLength: 1,
            parse: function parse(data) {
                return $.map(data, function(row) {
				    return {
					    data: row,
					    value: getText(row["node"]),
					    result: getText(row["node"])
				    }
			    });
            },
            formatItem: function(item) {
			    return format(item);
		    },
            extraParams: {
                query : "/jcr:root${renderContext.site.JCRPath}/tags//element(*, jnt:tag)[jcr:contains(.,'{$q}*')]/@j:nodename",
                language : "xpath",
                escapeColon : "false",
                propertyMatchRegexp : "{$q}.*",
                removeDuplicatePropValues : "false"
            }
        });
    });
...
    <form action="${url.base}${currentNode.path}" method="post">
        <input type="hidden" name="methodToCall" value="put"/>
        <input type="text" name="j:newTag" class="newTagInput" value=""/>
        <input type="submit" title="<fmt:message key='add'/>" value="<fmt:message key='add'/>" class="button"
               onclick="addNewTag(this.form, '${currentNode.identifier}', '${separator}'); return false;"/>
    </form>
---------------------------------------
